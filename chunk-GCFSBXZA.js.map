{
  "version": 3,
  "sources": ["Modules/pages/monitoring/components/area-examle/area-examle.component.ts", "Modules/pages/monitoring/components/area-examle/area-examle.component.html", "Modules/pages/monitoring/components/d3chart/dummy_data.json", "Modules/pages/monitoring/components/chart-tooltip/chart-tooltip.component.ts", "Modules/pages/monitoring/components/chart-tooltip/chart-tooltip.component.html", "Modules/pages/monitoring/components/d3chart/d3chart.component.ts", "Modules/pages/monitoring/components/d3chart/d3chart.component.html", "Modules/pages/monitoring/components/month-picker/month-picker.component.ts", "Modules/pages/monitoring/components/month-picker/month-picker.component.html", "Modules/pages/monitoring/components/monitoring-layout/usage-toolbar/usage-toolbar.component.ts", "Modules/pages/monitoring/components/monitoring-layout/usage-toolbar/usage-toolbar.component.html", "Modules/pages/monitoring/components/chart/chart.component.ts", "Modules/pages/monitoring/components/chart/chart.component.html", "Modules/pages/monitoring/components/chart/classes/chart.abstract.ts", "Modules/pages/monitoring/components/chart/classes/bar-chart.class.ts", "Modules/pages/monitoring/components/chart/classes/grouped-bar.class.ts", "Modules/pages/monitoring/components/chart/classes/donut-chart.class.ts", "Modules/pages/monitoring/components/chart/classes/stack-bar.class.ts", "Modules/pages/monitoring/components/chart/classes/horisontal-stack-bar.class.ts", "Modules/pages/monitoring/monitoring.service.ts", "Modules/pages/monitoring/components/monitoring-layout/usage-graph/usage-graph.component.ts", "Modules/pages/monitoring/components/monitoring-layout/usage-graph/usage-graph.component.html", "Modules/pages/monitoring/components/monitoring-layout/monitoring-layout.component.ts", "Modules/pages/monitoring/components/monitoring-layout/monitoring-layout.component.html", "Modules/pages/monitoring/monitoring-routing.module.ts", "Modules/pages/monitoring/components/sample-chart/sample-chart.component.ts", "Modules/pages/monitoring/components/sample-chart/sample-chart.component.html", "Modules/pages/monitoring/monitoring.module.ts"],
  "sourcesContent": ["import { Component, OnInit } from '@angular/core';\r\nimport * as d3 from 'd3';\r\n\r\n\r\n@Component({\r\n  selector: 'app-area-examle',\r\n  templateUrl: './area-examle.component.html',\r\n  styleUrl: './area-examle.component.scss'\r\n})\r\nexport class AreaExamleComponent implements OnInit {\r\n\r\n  margin!: {\r\n    top: number;\r\n    right: number;\r\n    bottom: number;\r\n    left: number;\r\n  };\r\n  width!: number;\r\n  height!: number;\r\n\r\n  x: any;\r\n  y: any;\r\n\r\n  svg: any;\r\n\r\n  constructor(){\r\n    this.initChart();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.drawChart();\r\n  }\r\n\r\n  initChart(){\r\n    this.margin = {\r\n      top: 70,\r\n      right: 60,\r\n      bottom: 50,\r\n      left: 80\r\n    };\r\n    this.width = 1200 - this.margin.left - this.margin.right;\r\n    this.height = 600 - this.margin.top - this.margin.bottom;\r\n  }\r\n\r\n  drawChart(){\r\n    this.x = d3.scaleTime()\r\n      .range([0,this.width]);\r\n\r\n    this.y = d3.scaleLinear()\r\n      .range([this.height, 0]);\r\n\r\n    this.svg = d3.select('#chart-container')\r\n      .append('svg')\r\n      .attr('class', 'chart-svg')\r\n      .attr('width', this.width + this.margin.left + this.margin.right)\r\n      .attr('height', this.height + this.margin.top + this.margin.bottom)\r\n      .append('g')\r\n      .attr('transform', `translate(${this.margin.left},${this.margin.top})`);\r\n\r\n    // 툴팁 정의\r\n    const tooltip = d3.select('#chart-container')\r\n      .append('div')\r\n      .attr('class', 'chart-tooltip');\r\n\r\n    // 날짜 관련 툴팁 정의\r\n    const tooltipRawDate = d3.select('#chart-container')\r\n      .append('div')\r\n      .attr('class', 'chart-tooltip');\r\n\r\n    d3.csv('./assets/data/NTDOY.csv').then(data => {\r\n      const parseDate = d3.timeParse('%Y-%m-%d')\r\n      data.forEach((d: any) => {\r\n        d.Date = parseDate(d.Date) as Date;\r\n        d.Close = +d.Close;\r\n        // console.log(d.Date, ', ', d.Close);\r\n        \r\n      })\r\n      console.log(data);\r\n      \r\n      // x축 y축 도메인 지정\r\n      this.x.domain(d3.extent(data, (d: any) => d.Date));\r\n      this.y.domain([0, d3.max(data, (d: any) => d.Close)]);\r\n\r\n      // x축 생성\r\n      this.svg.append('g')\r\n        .attr('class', 'x-axis')\r\n        .attr('transform', `translate(0,${this.height})`)\r\n        .style('font-size', '14px')\r\n        .call(d3.axisBottom(this.x)\r\n          .tickValues(this.x.ticks(d3.timeYear.every(1)))\r\n          .tickFormat(d3.timeFormat('%Y') as any))\r\n        .selectAll('.tick line')\r\n        .style('stroke-opacity', 1);\r\n\r\n      this.svg.selectAll('.tick text')\r\n        .attr('fill', '#777')\r\n\r\n      // y축 생성\r\n      this.svg.append('g')\r\n        .attr('class', 'y-axis')\r\n        .attr('transform', `translate(${this.width}, 0)`)\r\n        .style('font-size', '14px')\r\n        .call(d3.axisRight(this.y)\r\n          .ticks(10)\r\n          .tickFormat((d:any) => {\r\n            if (isNaN(d)) return '';\r\n            return `$${d.toFixed(2)}`\r\n          })\r\n        )\r\n        .selectAll('.tick text')\r\n        .style('fill', '#777');\r\n\r\n      // line generator 생성\r\n      const line = d3.line()\r\n        .x((d:any) => this.x(d.Date))\r\n        .y((d:any) => this.y(d.Close));\r\n\r\n      // area generator 생성\r\n      const area = d3.area()\r\n        .x((d: any) => this.x(d.Date))\r\n        .y0(this.height)\r\n        .y1((d: any) => this.y(d.Close));\r\n\r\n      // area path요소 추가\r\n      this.svg.append('path')\r\n        .datum(data)\r\n        .attr('class', 'area')\r\n        .attr('d', area)\r\n        .style('fill', '#85bb65')\r\n        .style('opacity', 0.5);\r\n\r\n      // line path 요소 추가\r\n      const path = this.svg.append('path')\r\n        .datum(data)\r\n        .attr('class', 'line')\r\n        .attr('fill', 'none')\r\n        .attr('stroke', '#85bb65')\r\n        .attr('stroke-width', 1)\r\n        .attr('d', line);\r\n\r\n      // circle 요소 추가\r\n\r\n      const circle = this.svg.append('circle')\r\n          .attr('r', 0)\r\n          .attr('fill', 'red')\r\n          .style('stroke', 'white')\r\n          .attr('opacity', 0.7)\r\n          .style('pointer-events', 'none');\r\n\r\n      // 추가된 circle로부터 날짜(x)와 값(y)으로 이어지는 선 추가\r\n\r\n      const tooltipLineX = this.svg.append('line')\r\n          .attr('class', 'tooltip-line')\r\n          .attr('id', 'tooltip-line-x')\r\n          .attr('stroke', 'red')\r\n          .attr('stroke-width', 1)\r\n          .attr('stroke-dasharray', '2,2');\r\n\r\n      const tooltipLineY = this.svg.append('line')\r\n          .attr('class', 'tooltip-line')\r\n          .attr('id', 'tooltip-line-y')\r\n          .attr('stroke', 'red')\r\n          .attr('stroke-width', 1)\r\n          .attr('stroke-dasharray', '2,2');\r\n\r\n      const listeningRect = this.svg.append('rect')\r\n          .attr('width', this.width)\r\n          .attr('height', this.height)\r\n          .attr('fill', 'transparent');\r\n      \r\n      // const self = this;\r\n      // 마우스 이동 이벤트 추가\r\n      listeningRect.on('mousemove', (e:MouseEvent) =>{\r\n        // console.log(e);\r\n        const [xCoord] = d3.pointer(e, this.svg.node());\r\n        const bisectDate = d3.bisector((d:any) => d.Date).left;\r\n        const x0 = this.x.invert(xCoord);\r\n        const i = bisectDate(data, x0, 1);\r\n        const d0 = data[i - 1];\r\n        const d1 = data[i];\r\n        const d = x0 - (d0 as any).Date > (d1 as any).Date - x0 ? d1 : d0;\r\n        const xPos = this.x((d as any).Date);\r\n        const yPos = this.y((d as any).Close);\r\n\r\n        // circle의 위치 갱신\r\n        circle.attr('cx', xPos).attr('cy', yPos);\r\n        \r\n        // circle의 지름 변경\r\n        circle.transition()\r\n          .duration(50)\r\n          .attr('r', 5);\r\n\r\n        // circle과 연결된 선의 위치 갱신\r\n        tooltipLineX.style('display', 'block').attr('x1', xPos).attr('x2', xPos).attr('y1', 0).attr('y2', this.height);\r\n        tooltipLineY.style('display', 'block').attr('y1', yPos).attr('y2', yPos).attr('x1',0).attr('x2', this.width);\r\n        \r\n\r\n        tooltip\r\n          .style('display', 'block')\r\n          .style('left', `${this.width + 90}px`)\r\n          .style('top', `${yPos + 68}px`)\r\n          .html(`$${(d as any).Close !== undefined ? (d as any).Close.toFixed(2) : 'N/A'}`);\r\n\r\n\r\n        tooltipRawDate\r\n          .style('display', 'block')\r\n          .style('left', `${xPos + 60}px`)\r\n          .style('top', `${this.height + 53}px`)\r\n          .html(`${(d as any).Date !== undefined ? (d as any).Date.toISOString().slice(0, 10) : 'N/A'}`);\r\n\r\n        listeningRect.on('mouseleave', () => {\r\n          circle.transition().duration(50).attr('r',0);\r\n          tooltip.style('display', 'none');\r\n          tooltipRawDate.style('display', 'none');\r\n          tooltipLineX.attr('x1',0).attr('x2',0);\r\n          tooltipLineY.attr('y1',0).attr('y2',0);\r\n          tooltipLineX.style('display', 'none');\r\n          tooltipLineY.style('display', 'none');\r\n        })\r\n      });\r\n\r\n      \r\n      \r\n\r\n    })\r\n\r\n\r\n\r\n    \r\n  }\r\n\r\n}\r\n", "<div id=\"chart-container\"></div>", "{\"data\": [{\"cpuUsage\": 60, \"memoryUsage\": 36, \"diskUsage\": 84}, {\"cpuUsage\": 52, \"memoryUsage\": 70, \"diskUsage\": 6}, {\"cpuUsage\": 50, \"memoryUsage\": 53, \"diskUsage\": 80}, {\"cpuUsage\": 31, \"memoryUsage\": 47, \"diskUsage\": 65}, {\"cpuUsage\": 82, \"memoryUsage\": 70, \"diskUsage\": 79}, {\"cpuUsage\": 28, \"memoryUsage\": 72, \"diskUsage\": 19}, {\"cpuUsage\": 25, \"memoryUsage\": 29, \"diskUsage\": 1}, {\"cpuUsage\": 47, \"memoryUsage\": 89, \"diskUsage\": 13}, {\"cpuUsage\": 2, \"memoryUsage\": 47, \"diskUsage\": 56}, {\"cpuUsage\": 89, \"memoryUsage\": 22, \"diskUsage\": 4}, {\"cpuUsage\": 20, \"memoryUsage\": 51, \"diskUsage\": 48}, {\"cpuUsage\": 47, \"memoryUsage\": 9, \"diskUsage\": 90}, {\"cpuUsage\": 47, \"memoryUsage\": 8, \"diskUsage\": 85}, {\"cpuUsage\": 78, \"memoryUsage\": 5, \"diskUsage\": 67}, {\"cpuUsage\": 71, \"memoryUsage\": 59, \"diskUsage\": 57}, {\"cpuUsage\": 68, \"memoryUsage\": 74, \"diskUsage\": 14}, {\"cpuUsage\": 11, \"memoryUsage\": 48, \"diskUsage\": 55}, {\"cpuUsage\": 35, \"memoryUsage\": 47, \"diskUsage\": 69}, {\"cpuUsage\": 54, \"memoryUsage\": 22, \"diskUsage\": 89}, {\"cpuUsage\": 22, \"memoryUsage\": 36, \"diskUsage\": 36}, {\"cpuUsage\": 92, \"memoryUsage\": 60, \"diskUsage\": 50}, {\"cpuUsage\": 68, \"memoryUsage\": 43, \"diskUsage\": 29}, {\"cpuUsage\": 33, \"memoryUsage\": 60, \"diskUsage\": 23}, {\"cpuUsage\": 94, \"memoryUsage\": 58, \"diskUsage\": 77}, {\"cpuUsage\": 41, \"memoryUsage\": 56, \"diskUsage\": 9}, {\"cpuUsage\": 96, \"memoryUsage\": 29, \"diskUsage\": 78}, {\"cpuUsage\": 74, \"memoryUsage\": 40, \"diskUsage\": 45}, {\"cpuUsage\": 82, \"memoryUsage\": 88, \"diskUsage\": 83}, {\"cpuUsage\": 97, \"memoryUsage\": 45, \"diskUsage\": 72}, {\"cpuUsage\": 84, \"memoryUsage\": 100, \"diskUsage\": 18}, {\"cpuUsage\": 27, \"memoryUsage\": 23, \"diskUsage\": 85}, {\"cpuUsage\": 99, \"memoryUsage\": 53, \"diskUsage\": 40}, {\"cpuUsage\": 22, \"memoryUsage\": 43, \"diskUsage\": 17}, {\"cpuUsage\": 39, \"memoryUsage\": 52, \"diskUsage\": 52}, {\"cpuUsage\": 72, \"memoryUsage\": 76, \"diskUsage\": 26}, {\"cpuUsage\": 63, \"memoryUsage\": 55, \"diskUsage\": 88}, {\"cpuUsage\": 59, \"memoryUsage\": 71, \"diskUsage\": 59}, {\"cpuUsage\": 13, \"memoryUsage\": 14, \"diskUsage\": 70}, {\"cpuUsage\": 24, \"memoryUsage\": 37, \"diskUsage\": 2}, {\"cpuUsage\": 25, \"memoryUsage\": 2, \"diskUsage\": 89}, {\"cpuUsage\": 62, \"memoryUsage\": 95, \"diskUsage\": 9}, {\"cpuUsage\": 62, \"memoryUsage\": 81, \"diskUsage\": 75}, {\"cpuUsage\": 4, \"memoryUsage\": 45, \"diskUsage\": 85}, {\"cpuUsage\": 64, \"memoryUsage\": 50, \"diskUsage\": 79}, {\"cpuUsage\": 88, \"memoryUsage\": 65, \"diskUsage\": 69}, {\"cpuUsage\": 84, \"memoryUsage\": 28, \"diskUsage\": 87}, {\"cpuUsage\": 35, \"memoryUsage\": 6, \"diskUsage\": 72}, {\"cpuUsage\": 39, \"memoryUsage\": 67, \"diskUsage\": 8}, {\"cpuUsage\": 18, \"memoryUsage\": 25, \"diskUsage\": 10}, {\"cpuUsage\": 60, \"memoryUsage\": 8, \"diskUsage\": 42}]\r\n, \"data_mini\": [{\"cpuUsage\": 60, \"memoryUsage\": 36, \"diskUsage\": 84}, {\"cpuUsage\": 52, \"memoryUsage\": 70, \"diskUsage\": 6}, {\"cpuUsage\": 50, \"memoryUsage\": 53, \"diskUsage\": 80}, {\"cpuUsage\": 31, \"memoryUsage\": 47, \"diskUsage\": 65}, {\"cpuUsage\": 82, \"memoryUsage\": 70, \"diskUsage\": 79}, {\"cpuUsage\": 28, \"memoryUsage\": 72, \"diskUsage\": 19}, {\"cpuUsage\": 25, \"memoryUsage\": 29, \"diskUsage\": 1}, {\"cpuUsage\": 47, \"memoryUsage\": 89, \"diskUsage\": 13}, {\"cpuUsage\": 2, \"memoryUsage\": 47, \"diskUsage\": 56}, {\"cpuUsage\": 89, \"memoryUsage\": 22, \"diskUsage\": 4}]\r\n,\"sample\":[1,2,3,4,5,6,7,8,9]\r\n, \"area\": [\r\n    {\r\n        \"Date\": \"2024-01-01T00:00:00.000\",\r\n        \"Value\": 5.0249086378\r\n    },\r\n    {\r\n        \"Date\": \"2024-01-02T00:00:00.000\",\r\n        \"Value\": 5.202524455\r\n    },\r\n    {\r\n        \"Date\": \"2024-01-03T00:00:00.000\",\r\n        \"Value\": 5.1863219839\r\n    },\r\n    {\r\n        \"Date\": \"2024-01-04T00:00:00.000\",\r\n        \"Value\": 5.3986808605\r\n    },\r\n    {\r\n        \"Date\": \"2024-01-05T00:00:00.000\",\r\n        \"Value\": 5.3488581008\r\n    },\r\n    {\r\n        \"Date\": \"2024-01-06T00:00:00.000\",\r\n        \"Value\": 5.6157652041\r\n    },\r\n    {\r\n        \"Date\": \"2024-01-07T00:00:00.000\",\r\n        \"Value\": 5.6097492101\r\n    },\r\n    {\r\n        \"Date\": \"2024-01-08T00:00:00.000\",\r\n        \"Value\": 5.711847214\r\n    },\r\n    {\r\n        \"Date\": \"2024-01-09T00:00:00.000\",\r\n        \"Value\": 5.7351642495\r\n    },\r\n    {\r\n        \"Date\": \"2024-01-10T00:00:00.000\",\r\n        \"Value\": 5.8818114062\r\n    },\r\n    {\r\n        \"Date\": \"2024-01-11T00:00:00.000\",\r\n        \"Value\": 5.7596970406\r\n    },\r\n    {\r\n        \"Date\": \"2024-01-12T00:00:00.000\",\r\n        \"Value\": 5.7735864499\r\n    },\r\n    {\r\n        \"Date\": \"2024-01-13T00:00:00.000\",\r\n        \"Value\": 5.8727518536\r\n    },\r\n    {\r\n        \"Date\": \"2024-01-14T00:00:00.000\",\r\n        \"Value\": 6.0317793027\r\n    },\r\n    {\r\n        \"Date\": \"2024-01-15T00:00:00.000\",\r\n        \"Value\": 6.0235381284\r\n    },\r\n    {\r\n        \"Date\": \"2024-01-16T00:00:00.000\",\r\n        \"Value\": 6.0725645126\r\n    },\r\n    {\r\n        \"Date\": \"2024-01-17T00:00:00.000\",\r\n        \"Value\": 5.9608597454\r\n    },\r\n    {\r\n        \"Date\": \"2024-01-18T00:00:00.000\",\r\n        \"Value\": 6.1015230996\r\n    },\r\n    {\r\n        \"Date\": \"2024-01-19T00:00:00.000\",\r\n        \"Value\": 5.9806110112\r\n    },\r\n    {\r\n        \"Date\": \"2024-01-20T00:00:00.000\",\r\n        \"Value\": 5.8890250275\r\n    },\r\n    {\r\n        \"Date\": \"2024-01-21T00:00:00.000\",\r\n        \"Value\": 5.7176089456\r\n    },\r\n    {\r\n        \"Date\": \"2024-01-22T00:00:00.000\",\r\n        \"Value\": 5.7742732907\r\n    },\r\n    {\r\n        \"Date\": \"2024-01-23T00:00:00.000\",\r\n        \"Value\": 5.8496577559\r\n    },\r\n    {\r\n        \"Date\": \"2024-01-24T00:00:00.000\",\r\n        \"Value\": 5.7703007138\r\n    },\r\n    {\r\n        \"Date\": \"2024-01-25T00:00:00.000\",\r\n        \"Value\": 5.5359835821\r\n    },\r\n    {\r\n        \"Date\": \"2024-01-26T00:00:00.000\",\r\n        \"Value\": 5.4706165986\r\n    },\r\n    {\r\n        \"Date\": \"2024-01-27T00:00:00.000\",\r\n        \"Value\": 5.4396611802\r\n    },\r\n    {\r\n        \"Date\": \"2024-01-28T00:00:00.000\",\r\n        \"Value\": 5.5252591965\r\n    },\r\n    {\r\n        \"Date\": \"2024-01-29T00:00:00.000\",\r\n        \"Value\": 5.3520288909\r\n    },\r\n    {\r\n        \"Date\": \"2024-01-30T00:00:00.000\",\r\n        \"Value\": 5.3327797087\r\n    },\r\n    {\r\n        \"Date\": \"2024-01-31T00:00:00.000\",\r\n        \"Value\": 5.1001872842\r\n    },\r\n    {\r\n        \"Date\": \"2024-02-01T00:00:00.000\",\r\n        \"Value\": 4.9745469525\r\n    },\r\n    {\r\n        \"Date\": \"2024-02-02T00:00:00.000\",\r\n        \"Value\": 4.8807077338\r\n    },\r\n    {\r\n        \"Date\": \"2024-02-03T00:00:00.000\",\r\n        \"Value\": 4.9929015942\r\n    },\r\n    {\r\n        \"Date\": \"2024-02-04T00:00:00.000\",\r\n        \"Value\": 4.8101477819\r\n    },\r\n    {\r\n        \"Date\": \"2024-02-05T00:00:00.000\",\r\n        \"Value\": 4.6250176437\r\n    },\r\n    {\r\n        \"Date\": \"2024-02-06T00:00:00.000\",\r\n        \"Value\": 4.5410031079\r\n    },\r\n    {\r\n        \"Date\": \"2024-02-07T00:00:00.000\",\r\n        \"Value\": 4.4473113044\r\n    },\r\n    {\r\n        \"Date\": \"2024-02-08T00:00:00.000\",\r\n        \"Value\": 4.4419425403\r\n    },\r\n    {\r\n        \"Date\": \"2024-02-09T00:00:00.000\",\r\n        \"Value\": 4.1104129271\r\n    },\r\n    {\r\n        \"Date\": \"2024-02-10T00:00:00.000\",\r\n        \"Value\": 4.2927247631\r\n    },\r\n    {\r\n        \"Date\": \"2024-02-11T00:00:00.000\",\r\n        \"Value\": 4.0998785848\r\n    },\r\n    {\r\n        \"Date\": \"2024-02-12T00:00:00.000\",\r\n        \"Value\": 4.0503449048\r\n    },\r\n    {\r\n        \"Date\": \"2024-02-13T00:00:00.000\",\r\n        \"Value\": 4.0739338775\r\n    },\r\n    {\r\n        \"Date\": \"2024-02-14T00:00:00.000\",\r\n        \"Value\": 3.929762749\r\n    },\r\n    {\r\n        \"Date\": \"2024-02-15T00:00:00.000\",\r\n        \"Value\": 4.0043461882\r\n    },\r\n    {\r\n        \"Date\": \"2024-02-16T00:00:00.000\",\r\n        \"Value\": 4.0176531468\r\n    },\r\n    {\r\n        \"Date\": \"2024-02-17T00:00:00.000\",\r\n        \"Value\": 4.1669081299\r\n    },\r\n    {\r\n        \"Date\": \"2024-02-18T00:00:00.000\",\r\n        \"Value\": 4.2467892033\r\n    },\r\n    {\r\n        \"Date\": \"2024-02-19T00:00:00.000\",\r\n        \"Value\": 4.1189499793\r\n    },\r\n    {\r\n        \"Date\": \"2024-02-20T00:00:00.000\",\r\n        \"Value\": 4.1185352157\r\n    },\r\n    {\r\n        \"Date\": \"2024-02-21T00:00:00.000\",\r\n        \"Value\": 4.1147054788\r\n    },\r\n    {\r\n        \"Date\": \"2024-02-22T00:00:00.000\",\r\n        \"Value\": 4.2504625189\r\n    },\r\n    {\r\n        \"Date\": \"2024-02-23T00:00:00.000\",\r\n        \"Value\": 4.276799116\r\n    },\r\n    {\r\n        \"Date\": \"2024-02-24T00:00:00.000\",\r\n        \"Value\": 4.2368557449\r\n    },\r\n    {\r\n        \"Date\": \"2024-02-25T00:00:00.000\",\r\n        \"Value\": 4.486200475\r\n    },\r\n    {\r\n        \"Date\": \"2024-02-26T00:00:00.000\",\r\n        \"Value\": 4.4203351791\r\n    },\r\n    {\r\n        \"Date\": \"2024-02-27T00:00:00.000\",\r\n        \"Value\": 4.5206497337\r\n    },\r\n    {\r\n        \"Date\": \"2024-02-28T00:00:00.000\",\r\n        \"Value\": 4.4567022103\r\n    },\r\n    {\r\n        \"Date\": \"2024-02-29T00:00:00.000\",\r\n        \"Value\": 4.6799184941\r\n    },\r\n    {\r\n        \"Date\": \"2024-03-01T00:00:00.000\",\r\n        \"Value\": 4.7139931432\r\n    },\r\n    {\r\n        \"Date\": \"2024-03-02T00:00:00.000\",\r\n        \"Value\": 5.0235612907\r\n    },\r\n    {\r\n        \"Date\": \"2024-03-03T00:00:00.000\",\r\n        \"Value\": 4.900609221\r\n    },\r\n    {\r\n        \"Date\": \"2024-03-04T00:00:00.000\",\r\n        \"Value\": 5.0171944691\r\n    },\r\n    {\r\n        \"Date\": \"2024-03-05T00:00:00.000\",\r\n        \"Value\": 5.0629054741\r\n    },\r\n    {\r\n        \"Date\": \"2024-03-06T00:00:00.000\",\r\n        \"Value\": 5.0559006646\r\n    },\r\n    {\r\n        \"Date\": \"2024-03-07T00:00:00.000\",\r\n        \"Value\": 5.3935550184\r\n    },\r\n    {\r\n        \"Date\": \"2024-03-08T00:00:00.000\",\r\n        \"Value\": 5.5921024843\r\n    },\r\n    {\r\n        \"Date\": \"2024-03-09T00:00:00.000\",\r\n        \"Value\": 5.5466465567\r\n    },\r\n    {\r\n        \"Date\": \"2024-03-10T00:00:00.000\",\r\n        \"Value\": 5.5659330693\r\n    },\r\n    {\r\n        \"Date\": \"2024-03-11T00:00:00.000\",\r\n        \"Value\": 5.6471014089\r\n    },\r\n    {\r\n        \"Date\": \"2024-03-12T00:00:00.000\",\r\n        \"Value\": 5.7650300944\r\n    },\r\n    {\r\n        \"Date\": \"2024-03-13T00:00:00.000\",\r\n        \"Value\": 5.9690325338\r\n    },\r\n    {\r\n        \"Date\": \"2024-03-14T00:00:00.000\",\r\n        \"Value\": 5.9398246463\r\n    },\r\n    {\r\n        \"Date\": \"2024-03-15T00:00:00.000\",\r\n        \"Value\": 5.9179160004\r\n    },\r\n    {\r\n        \"Date\": \"2024-03-16T00:00:00.000\",\r\n        \"Value\": 6.0131929675\r\n    },\r\n    {\r\n        \"Date\": \"2024-03-17T00:00:00.000\",\r\n        \"Value\": 5.7635383964\r\n    },\r\n    {\r\n        \"Date\": \"2024-03-18T00:00:00.000\",\r\n        \"Value\": 6.1696759287\r\n    },\r\n    {\r\n        \"Date\": \"2024-03-19T00:00:00.000\",\r\n        \"Value\": 5.8644680499\r\n    },\r\n    {\r\n        \"Date\": \"2024-03-20T00:00:00.000\",\r\n        \"Value\": 6.0560129635\r\n    },\r\n    {\r\n        \"Date\": \"2024-03-21T00:00:00.000\",\r\n        \"Value\": 5.911791502\r\n    },\r\n    {\r\n        \"Date\": \"2024-03-22T00:00:00.000\",\r\n        \"Value\": 5.8862182735\r\n    },\r\n    {\r\n        \"Date\": \"2024-03-23T00:00:00.000\",\r\n        \"Value\": 5.938306639\r\n    },\r\n    {\r\n        \"Date\": \"2024-03-24T00:00:00.000\",\r\n        \"Value\": 5.8161529728\r\n    },\r\n    {\r\n        \"Date\": \"2024-03-25T00:00:00.000\",\r\n        \"Value\": 5.6759888639\r\n    },\r\n    {\r\n        \"Date\": \"2024-03-26T00:00:00.000\",\r\n        \"Value\": 5.8385085133\r\n    },\r\n    {\r\n        \"Date\": \"2024-03-27T00:00:00.000\",\r\n        \"Value\": 5.645857966\r\n    },\r\n    {\r\n        \"Date\": \"2024-03-28T00:00:00.000\",\r\n        \"Value\": 5.4528102475\r\n    },\r\n    {\r\n        \"Date\": \"2024-03-29T00:00:00.000\",\r\n        \"Value\": 5.6316144129\r\n    },\r\n    {\r\n        \"Date\": \"2024-03-30T00:00:00.000\",\r\n        \"Value\": 5.3262679174\r\n    },\r\n    {\r\n        \"Date\": \"2024-03-31T00:00:00.000\",\r\n        \"Value\": 5.4829913728\r\n    },\r\n    {\r\n        \"Date\": \"2024-04-01T00:00:00.000\",\r\n        \"Value\": 5.085985223\r\n    },\r\n    {\r\n        \"Date\": \"2024-04-02T00:00:00.000\",\r\n        \"Value\": 5.2056125045\r\n    },\r\n    {\r\n        \"Date\": \"2024-04-03T00:00:00.000\",\r\n        \"Value\": 4.9423458469\r\n    },\r\n    {\r\n        \"Date\": \"2024-04-04T00:00:00.000\",\r\n        \"Value\": 5.0855570558\r\n    },\r\n    {\r\n        \"Date\": \"2024-04-05T00:00:00.000\",\r\n        \"Value\": 4.8404433412\r\n    },\r\n    {\r\n        \"Date\": \"2024-04-06T00:00:00.000\",\r\n        \"Value\": 4.6254784209\r\n    },\r\n    {\r\n        \"Date\": \"2024-04-07T00:00:00.000\",\r\n        \"Value\": 4.643996324\r\n    },\r\n    {\r\n        \"Date\": \"2024-04-08T00:00:00.000\",\r\n        \"Value\": 4.4695667521\r\n    },\r\n    {\r\n        \"Date\": \"2024-04-09T00:00:00.000\",\r\n        \"Value\": 4.4931298465\r\n    }\r\n]}", "import { AfterViewInit, Component, ElementRef, Input, OnInit, Renderer2, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-chart-tooltip',\r\n  templateUrl: './chart-tooltip.component.html',\r\n  styleUrl: './chart-tooltip.component.scss'\r\n})\r\nexport class ChartTooltipComponent implements OnInit {\r\n  @Input() data: any = '';\r\n  @Input() x!: number;\r\n  @Input() y!: number;\r\n  dataArray: Array<{key: string, value: any}> = new Array();\r\n  longText = `The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog\r\n  from Japan. A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was\r\n  originally bred for hunting.`;\r\n\r\n  /**\r\n   * 동적으로 컴포넌트를 생성할 때\r\n   * { read: ElementRef }\r\n   * read를 사용하여 읽어오고자 하는 데이터의 타입을 지정해줘야 함\r\n   *  */ \r\n  @ViewChild('cardRef', { read: ElementRef }) cardRef!: ElementRef;\r\n\r\n  constructor(private renderer: Renderer2){}\r\n\r\n  ngOnInit(): void {\r\n    this.setData();\r\n  }\r\n\r\n  setData(){\r\n    Object.entries(this.data).forEach(([key, value]) => {\r\n      this.dataArray.push({key, value});\r\n    })\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    \r\n    const el = this.cardRef?.nativeElement;\r\n    // console.log(this.cardRef);\r\n\r\n    this.renderer.setStyle(el, 'x', this.x);\r\n    this.renderer.setStyle(el, 'y', this.y);\r\n    \r\n    this.renderer.setStyle(el, 'left', `${this.x + 20}px`)\r\n    this.renderer.setStyle(el, 'top', `${this.y + 50}px`);\r\n  }\r\n\r\n  onMouseMove(event: MouseEvent): void {\r\n    this.x = event.clientX;\r\n    this.y = event.clientY;\r\n\r\n    const el = this.cardRef.nativeElement;\r\n    this.renderer.setStyle(el, 'left', `${this.x + 20}px`)\r\n    this.renderer.setStyle(el, 'top', `${this.y + 20}px`);\r\n  }\r\n}\r\n", "<mat-card class=\"tooltip-content\" #cardRef>\r\n    <mat-card-content>\r\n        @for (item of dataArray; track $index) {\r\n        <div>\r\n            <span>{{item.key}} : </span>\r\n            <span>{{item.value}}</span>\r\n        </div>\r\n        }\r\n    </mat-card-content>\r\n</mat-card>", "import { Component, ElementRef, OnInit, Renderer2, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport * as d3 from 'd3';\r\nimport * as dummy from './dummy_data.json';\r\nimport { ChartTooltipComponent } from '../chart-tooltip/chart-tooltip.component';\r\n\r\n@Component({\r\n  selector: 'app-d3chart',\r\n  templateUrl: './d3chart.component.html',\r\n  styleUrl: './d3chart.component.scss'\r\n})\r\nexport class D3chartComponent implements OnInit {\r\n\r\n  @ViewChild('container', { read: ViewContainerRef }) container!: ViewContainerRef;\r\n  @ViewChild('chart') chart!: ElementRef;\r\n\r\n  constructor(private renderer: Renderer2){}\r\n\r\n  ngOnInit() {\r\n    this.dataArray = dummy.data_mini as Array<any>;\r\n    this.getServerStatus();\r\n  }\r\n\r\n  getServerStatus() {\r\n    this.visualizeData(dummy.data_mini as Array<any>);\r\n    // console.log(dummy.data);\r\n    \r\n  }\r\n\r\n  dataArray = new Array<any>();\r\n\r\n  width = 1000;\r\n  height = 500;\r\n  marginTop = 70;\r\n  marginRight = 60;\r\n  marginLeft = 50;\r\n  marginBottom = 80;\r\n\r\n  svg: any;\r\n  \r\n  barGroup: any;\r\n\r\n  xScale = d3.scaleBand();\r\n  yScale = d3.scaleLinear();\r\n\r\n  gx: any;\r\n  gy: any;\r\n\r\n  xAxis: any;\r\n  yAxis: any;\r\n\r\n  bar: any;\r\n\r\n  line: any;\r\n  path: any;\r\n  dots: any;\r\n\r\n  visualizeData(dataArray: Array<any>) {\r\n\r\n    this.svg = d3.select('#chart').append('svg')\r\n      .attr('width', this.width)\r\n      .attr('height', this.height)\r\n      .style('background', 'white')\r\n      .attr('transform', `translate(${this.marginLeft})`)\r\n\r\n    this.xScale = d3.scaleBand()\r\n      .domain(dataArray.map((data,i) => i.toString()))\r\n      .range([this.marginLeft, this.width - this.marginRight])\r\n\r\n    this.yScale = d3.scaleLinear()\r\n      .domain([0,d3.max(dataArray, d=> Math.max(d.cpuUsage, d.memoryUsage, d.diskUsage)) as number]).nice()\r\n      .range([this.height - this.marginBottom, this.marginTop]);\r\n\r\n    const leftLimit = this.svg.append(\"defs\").append(\"clipPath\")\r\n      .attr(\"id\", \"clip\")\r\n      .append(\"rect\")\r\n      .attr(\"width\", this.width - this.marginLeft - this.marginRight)\r\n      .attr(\"height\", this.height - this.marginTop - this.marginBottom)\r\n      .attr(\"x\", this.marginLeft)\r\n      .attr(\"y\", this.marginTop);\r\n\r\n\r\n    this.barGroup = this.svg.append('g').attr('class', 'bar-group').attr(\"clip-path\", \"url(#clip)\");\r\n\r\n    ['cpuUsage', 'memoryUsage', 'diskUsage'].forEach((key,index) => {\r\n      this.bar = this.barGroup.selectAll(`.bar-${key}`)\r\n        .data(dataArray)\r\n        .enter()\r\n        .append('rect')\r\n        .attr('class', `bar-${key}`)\r\n        .style('stroke', 'black')\r\n        .style('stroke-width', '0.5px')\r\n        // x(i.toString())! : x축의 구간을 지정\r\n        // (x.bandwidth()/3)*index : 지정된 구간에서 바를 그릴 위치\r\n        // 예를 들어 10개의 구간이 있다면\r\n        // 첫번째는, 10개의 구간 중 하나의 구간을 지정하는 역할\r\n        // 두번째는, 그 하나의 구간을 다시 3개의 구간으로 나눠 바를 그릴 위치를 지정함\r\n        .attr('x', (data: any,i: any) => this.xScale(i.toString())! + (this.xScale.bandwidth()/3)*index)\r\n        .attr('y', (d:any) => {\r\n          return this.yScale(0);\r\n        })\r\n        .attr('width', this.xScale.bandwidth()/3)\r\n        .attr('height', 0)\r\n        .attr('fill', 'white')\r\n        .on('mouseover', (d: any) => this.barOver(d))\r\n        .on('mouseout', (d: any) => this.barOut(d))\r\n        .transition()\r\n        .duration(500)\r\n        .attr('fill', ['red', 'green', 'blue'][index])\r\n        .attr('y', (d: any) => this.yScale(d[key]))\r\n        .attr('height', (d: any) => (this.height - this.marginBottom) - this.yScale(d[key]))\r\n    })\r\n\r\n    this.xAxis = d3.axisBottom(this.xScale);\r\n    this.yAxis = d3.axisLeft(this.yScale)\r\n\r\n    this.gx = this.svg.append('g')\r\n      .attr('class', 'x-axis')\r\n      .attr('transform', `translate(0,${this.height - this.marginBottom})`)\r\n      .call(this.xAxis)\r\n\r\n    this.gy = this.svg.append('g')\r\n      .attr('class', 'y-axis')\r\n      .attr('yscale-margin', 'margin-left:20px')\r\n      .attr('transform', `translate(${this.marginLeft},0)`)\r\n      .call(this.yAxis)\r\n\r\n    this.line = d3.line()\r\n      .x((d, i) => this.xScale(i.toString()) as number + this.xScale.bandwidth() / 2)\r\n      .y((d: any,index) => this.yScale(d.memoryUsage));\r\n\r\n    this.path = this.svg.append('path')\r\n      .datum(dataArray)\r\n      .attr('fill', 'none')\r\n      .attr('stroke', 'black')\r\n      .attr('stroke-width', 2)\r\n      .attr('d', this.line)\r\n      .attr('class','line')\r\n      .attr(\"clip-path\", \"url(#clip)\");\r\n\r\n    const totalLength = this.path.node()?.getTotalLength()\r\n\r\n    console.log('길이 ', this.path.node());\r\n\r\n    this.path\r\n      // .attr('stroke-dasharray', 0)\r\n      .attr('stroke-dashoffset', totalLength!)\r\n      .transition()\r\n      // .duration(500)\r\n      // .ease(d3.easeLinear)\r\n      // .attr('stroke-dasharray', totalLength)\r\n      // .attr('stroke-dashoffset', totalLength);\r\n    \r\n\r\n    this.dots = this.svg.selectAll('.dot')\r\n      .data(dataArray)\r\n      .enter()\r\n      .append('circle')\r\n      .attr('class', 'dot')\r\n      .attr('cx', (d: any, index: any) => this.xScale(index.toString())! + this.xScale.bandwidth() / 2)\r\n      .attr('cy', (d:any) => this.yScale(d.memoryUsage))\r\n      .attr('r', 5)\r\n      .attr('fill', 'black')\r\n      .attr(\"clip-path\", \"url(#clip)\");\r\n\r\n    const legendData = ['CPU Usage', 'Memory Usage', 'Disk Usage'];\r\n    const colorScale = d3.scaleOrdinal<string,string>().domain(legendData).range(['red', 'green', 'blue']);\r\n\r\n    // 범례 테두리 추가\r\n    // 범례 항목의 크기와 간격을 고려하여 테두리의 위치와 크기 계산\r\n    const legendPadding = 5; // 테두리와 범례 항목 사이의 패딩\r\n    const legendWidth = 150; // 테두리의 너비, 필요에 따라 조정\r\n    const legendHeight = legendData.length * 20 + legendPadding * 2; // 항목 수와 패딩을 기반으로 높이 계산\r\n\r\n    // 전체 범례를 포함할 상위 g 요소의 위치를 설정\r\n    const legendContainer = this.svg.append('g')\r\n      .attr('class', 'legend-container')\r\n      .attr('transform', `translate(${this.width - this.marginRight - legendWidth}, ${this.marginTop})`);\r\n\r\n    // console.log('g : ',legendContainer);\r\n    \r\n\r\n    // 범례 데이터에 대한 g 요소 생성\r\n    const legend = legendContainer.selectAll('.legend')\r\n      .data(legendData)\r\n      .enter()\r\n      .append('g')\r\n      .attr('class', 'legend')\r\n      // 이제 각 범례 항목은 상위 g 요소(legendContainer) 내에서 상대적으로 위치합니다.\r\n      .attr('transform', (d: any, i: any) => `translate(0, ${i * 20})`)\r\n\r\n    // 각 범례 항목에 대한 rect 추가\r\n\r\n    const rectangleWidth = 18;\r\n    const rectangleHeight = 18;\r\n    legend.append('rect')\r\n      .attr('x', 0) // 상위 g 요소에 대해 상대적인 위치\r\n      .attr('y', 0)\r\n      .attr('width', rectangleWidth)\r\n      .attr('height', rectangleHeight)\r\n      .style('fill', (d: any) => colorScale(d))\r\n      .style('stroke', 'black')\r\n      .style('stroke-width', '0.5px');\r\n\r\n    // 각 범례 항목에 대한 text 추가\r\n    legend.append('text')\r\n      .attr('x', rectangleWidth + legendPadding) // rect의 오른쪽에 텍스트를 위치시킵니다. \r\n      .attr('y', 9)\r\n      .attr('dy', '.35em')\r\n      .style('fill', 'black')\r\n      .style('text-anchor', 'start') // 텍스트가 x 속성값의 오른쪽에서 시작하도록 설정\r\n      .text((d: any) => d);\r\n\r\n    // 범례 테두리 추가 (이전과 동일)\r\n    this.svg.append(\"rect\")\r\n      .attr(\"class\", \"legend-border\")\r\n      .attr(\"x\", this.width - this.marginRight - legendWidth - legendPadding)\r\n      .attr(\"y\", this.marginTop - legendPadding)\r\n      .attr(\"width\", legendWidth)\r\n      .attr(\"height\", legendHeight)\r\n      .style(\"fill\", \"none\")\r\n      .style('stroke', 'black')\r\n      .style('stroke-width', '0.5px')\r\n\r\n      /** 브러시 추가 로직 */\r\n    // this.brush = d3.brushX()\r\n    //   .extent([[this.marginLeft, this.marginTop], [this.width - this.marginRight, this.height - this.marginBottom]])\r\n    //   .on('end', (e) => this.brushedEnd(e));\r\n\r\n    // this.brush = d3.brushX()\r\n    //   .extent([[this.marginLeft, this.marginTop], [this.width - this.marginRight, this.height - this.marginBottom]])\r\n    //   .on('end', (e) => this.brushedEnd(e));\r\n\r\n    // this.brushGroup = this.svg.append('g')\r\n    //   .attr('class', 'brush')\r\n    //   .call(this.brush);\r\n\r\n    /**드래그앤드롭 로직 */\r\n    // this.svg.call(\r\n    //   d3.drag()\r\n    //     // .on('start', (d) => this.dragStart(d))\r\n    //     // .on('drag', (d) => this.draged(d))\r\n    //     .on('end', (d) => this.dragEnd(d))\r\n    // )\r\n\r\n\r\n    const zoom = d3.zoom()\r\n      .scaleExtent([1,8])\r\n      .translateExtent([\r\n        [this.marginLeft, this.marginTop],\r\n        [this.width - this.marginRight, this.height - this.marginTop]\r\n      ])\r\n      .on('zoom', (event) => this.zoomed(event))\r\n      \r\n      this.svg.call(zoom);\r\n      \r\n    }\r\n    \r\n  zoomed(event: d3.D3ZoomEvent<HTMLElement, any>){\r\n    // ['cpuUsage', 'memoryUsage', 'diskUsage']\r\n    console.log(event);\r\n    this.xScale.range([this.marginLeft, this.width - this.marginRight].map(d => {\r\n      console.log('dd',event.transform.applyX(d));\r\n      \r\n      return event.transform.applyX(d);\r\n    }));\r\n    \r\n    ['cpuUsage', 'memoryUsage', 'diskUsage'].forEach((key, index) => {\r\n      this.barGroup.selectAll(`.bar-${key}`)\r\n      .attr('x', (d: any, i: any) => this.xScale(i.toString())! + (this.xScale.bandwidth() / 3) * index)\r\n      .attr('width', this.xScale.bandwidth() / 3);\r\n    })\r\n    \r\n    this.line = d3.line()\r\n    .x((d, i) => this.xScale(i.toString()) as number + this.xScale.bandwidth() / 2)\r\n    .y((d: any, index) => this.yScale(d.memoryUsage));\r\n    \r\n    this.path.attr('d', this.line);\r\n    \r\n    this.dots\r\n    .attr('cx', (d:any, index: any) => this.xScale(index.toString())! + this.xScale.bandwidth() / 2)\r\n    .attr('cy', (d:any) => this.yScale(d.memoryUsage))\r\n    this.svg.selectAll(\".x-axis\").transition().duration(500).call(this.xAxis);\r\n  }\r\n\r\n  dragEnd(event: d3.D3DragEvent<HTMLElement, any, any>){\r\n    console.log('end', event);\r\n    // this.xScale.range([event.subject.x,event.x])\r\n    const x0 = event.subject.x;\r\n    const x1 = event.x;\r\n    const newDomain = this.xScale.domain().filter((d: any, i: any) => {\r\n      const xStartValue = this.xScale(i.toString());\r\n      const xEndValue = xStartValue! + this.xScale.bandwidth();\r\n\r\n      return x0 <= xEndValue && x1 >= xStartValue!;\r\n    });\r\n\r\n    const newArray = this.dataArray.slice(Number(newDomain[0]), Number(newDomain[-1]));\r\n\r\n    this.xScale.domain(newDomain);\r\n\r\n    /**\r\n     * .domain([0,d3.max(dataArray, d=> Math.max(d.cpuUsage, d.memoryUsage, d.diskUsage)) as number]).nice()\r\n      .range([this.height - this.marginBottom, this.marginTop]);\r\n     */\r\n\r\n    // this.yScale.domain([0, d3.max(dataArray, d => Math.max(d.cpuUsage, d.memoryUsage, d.diskUsage)) as number])\r\n\r\n    ['cpuUsage', 'memoryUsage', 'diskUsage'].forEach((key, index) => {\r\n      this.barGroup.selectAll(`.bar-${key}`)\r\n        .attr('x', (d: any, i: any) => {\r\n          console.log('dd/', this.xScale(i.toString())!);\r\n          console.log('ss/', (this.xScale.bandwidth() / 3));\r\n          \r\n          return this.xScale(i.toString())! + (this.xScale.bandwidth() / 3) * index\r\n        })\r\n        .attr('width', this.xScale.bandwidth() / 3)\r\n    })\r\n\r\n    this.svg.selectAll(\".x-axis\").transition().duration(500).call(this.xAxis);\r\n  }\r\n    \r\n  barOver(event: any){\r\n    d3.select(event.target).style('opacity',0.5);\r\n    // console.log('바', event.clientX);\r\n    const instance = this.container.createComponent(ChartTooltipComponent).instance;\r\n    instance.x = event.clientX;\r\n    instance.y = event.clientY;\r\n    instance.data = event.target.__data__;\r\n  }\r\n  \r\n  barOut(event: any) {\r\n    d3.select(event.target).style('opacity', 1);\r\n    this.container.clear();\r\n  }\r\n\r\n  brushed(event: any){\r\n    console.log('드래그시작',event);\r\n    \r\n  }\r\n\r\n  brushedEnd(event: any){\r\n    console.log('드래그 끝', event);\r\n    \r\n    const selection = event.selection;\r\n    if(selection === null) return;\r\n    \r\n    const [x0, x1] = selection.map((d:any) => {\r\n      // console.log(d);\r\n      return d;\r\n    });\r\n    \r\n    const selectedData = this.dataArray.filter((d:any, i:any) => {\r\n      const xStartValue = this.xScale(i.toString());\r\n      const xEndValue = xStartValue! + this.xScale.bandwidth();\r\n      \r\n      return x0 <= xEndValue && x1 >= xStartValue!;\r\n    });\r\n    \r\n    console.log(selectedData);\r\n    \r\n    // this.brushGroup.call(this.brush.move, null);\r\n    \r\n    this.updateChart(selectedData);\r\n  }\r\n\r\n  updateChart(newArray: Array<any>){\r\n\r\n    // console.log(this.chart.nativeElement);\r\n    // console.log(newArray);\r\n    \r\n    \r\n    // this.renderer.removeChild(this.chart.nativeElement, this.chart.nativeElement.firstElementChild);\r\n  }\r\n\r\n  // dragStart(event: any){\r\n  //   console.log('start', event);\r\n    \r\n  // }\r\n\r\n  // draged(event: any){\r\n  //   // console.log('ongoing', event);\r\n  // }\r\n\r\n}\r\n", "<div id=\"chart\" #chart><ng-container #container></ng-container></div>\r\n", "import { Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { DateTime } from 'luxon';\r\nimport { AppState } from '../../../../core/store/state.interface';\r\nimport { monthUpdteAction } from '../../../../core/store/monitoring/monitoring.action';\r\nimport { selectMonth } from '../../../../core/store/monitoring/monitoring.selector';\r\nimport { map } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-month-picker',\r\n  templateUrl: './month-picker.component.html',\r\n  styleUrl: './month-picker.component.scss'\r\n})\r\nexport class MonthPickerComponent implements OnInit {\r\n\r\n  constructor(\r\n    private store: Store<AppState>\r\n  ){}\r\n\r\n  month!: any;\r\n  picker = DateTime.now();\r\n\r\n  getLast(){\r\n    this.store.dispatch(monthUpdteAction({month: this.picker.minus({month: 1})}));\r\n  }\r\n\r\n  getNext(){\r\n    this.store.dispatch(monthUpdteAction({month: this.picker.plus({month: 1})}));\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.store.dispatch(monthUpdteAction({month: DateTime.now()}));\r\n    this.month = this.store.select(selectMonth).pipe(\r\n      map(month => {\r\n        this.picker = month;\r\n        return month.toFormat('MMM');\r\n      })\r\n    )\r\n  }\r\n}\r\n", "<div class=\"container\">\r\n    <button (click)=\"getLast()\"><mat-icon class=\"arrow-left\">arrow_back_ios</mat-icon></button>\r\n    <div class=\"month-text\">{{month | async}}</div>\r\n    <button (click)=\"getNext()\"><mat-icon class=\"arrow-right\">arrow_forward_ios</mat-icon></button>\r\n</div>", "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-usage-toolbar',\r\n  templateUrl: './usage-toolbar.component.html',\r\n  styleUrl: './usage-toolbar.component.scss'\r\n})\r\nexport class UsageToolbarComponent {\r\n\r\n}\r\n", "<div>\r\n    <mat-toolbar>\r\n        <mat-toolbar-row>\r\n            <span>Usage</span>\r\n        </mat-toolbar-row>\r\n\r\n        <mat-toolbar-row>\r\n            <mat-button-toggle-group name=\"fontStyle\" aria-label=\"Font Style\">\r\n                <mat-button-toggle value=\"\" [checked]=\"true\">Page View</mat-button-toggle>\r\n                <mat-button-toggle value=\"italic\">Request</mat-button-toggle>\r\n                <mat-button-toggle value=\"underline\">Server Health</mat-button-toggle>\r\n            </mat-button-toggle-group>\r\n            <span class=\"example-spacer\"></span>\r\n            <app-month-picker></app-month-picker>\r\n            <button mat-raised-button color=\"warn\" class=\"example-icon\" aria-label=\"Example icon-button with share icon\">\r\n                export\r\n            </button>\r\n        </mat-toolbar-row>\r\n    </mat-toolbar>\r\n</div>\r\n", "import { Component, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { Chart } from './classes/chart.abstract';\r\nimport { Subscription, filter } from 'rxjs';\r\nimport { Store } from '@ngrx/store';\r\nimport { AppState } from '../../../../core/store/state.interface';\r\nimport { selectMonth, selectPageView } from '../../../../core/store/monitoring/monitoring.selector';\r\nimport { pvAction } from '../../../../core/store/monitoring/monitoring.action';\r\nimport { DateTime } from 'luxon';\r\n\r\n@Component({\r\n  selector: 'app-chart',\r\n  templateUrl: './chart.component.html',\r\n  styleUrl: './chart.component.scss'\r\n})\r\nexport class ChartComponent implements OnInit, OnDestroy {\r\n\r\n  constructor(\r\n    public readonly elRef: ElementRef,\r\n    private store: Store<AppState>\r\n  ) {\r\n  }\r\n\r\n  isLoading: boolean = true;\r\n  @Input('chart') chart!: Chart;\r\n  @Input('path') path!: string;\r\n  @Output() event: EventEmitter<void> = new EventEmitter();\r\n  @ViewChild('chartContainer', {read: ViewContainerRef, static: true}) container!: ViewContainerRef; \r\n  pvDataSubscription!: Subscription;\r\n  monthSubscription!: Subscription;\r\n  month!: DateTime;\r\n\r\n  ngOnInit(): void {\r\n    this.initData();\r\n  }\r\n\r\n  initData() {\r\n    // this.monitoringService.data$.pipe(\r\n    //   filter(d => Object.keys(d).length > 0)\r\n    // )\r\n    // .subscribe({\r\n    //   next: d => {\r\n    //     this.isLoading = false;\r\n    //     this.chart.refineData(d, this.path);\r\n    //     this.chart.drawChart();\r\n    //   }\r\n    // })\r\n    this.monthSubscription = this.store.select(selectMonth).subscribe({\r\n      next: month => {\r\n        this.isLoading = true;\r\n        this.month = month;\r\n        this.chart.removeChart();\r\n        this.store.dispatch(pvAction());\r\n      }\r\n    })\r\n    this.pvDataSubscription = this.store.select(selectPageView).pipe(\r\n      filter(pvData => {\r\n        return pvData.length > 0\r\n      })\r\n    ).subscribe({\r\n      next: pvData => {\r\n        // console.log('컴포넌트', this.path);\r\n        this.isLoading = false;\r\n        // const data = [...pvData];\r\n        this.chart.setInterval(this.month);\r\n        this.chart.refineData(pvData, this.path);\r\n        this.chart.drawChart();\r\n      }\r\n    })\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.monthSubscription.unsubscribe();\r\n    this.pvDataSubscription.unsubscribe();\r\n  }\r\n}\r\n", "<!-- <div id=\"chart\" [class]=\"isLoading ? 'skeleton skeleton-graph' : ''\">\r\n    <ng-container #chartContainer></ng-container>\r\n</div> -->\r\n<div>\r\n    <mat-card class=\"example-card\">\r\n        <mat-card-header>\r\n            <mat-card-title>\r\n                <div class=\"graph-title\">\r\n                    <div>{{path}} request </div>\r\n                    <div [class]=\"isLoading ? 'skeleton skeleton-title' : ''\"></div>\r\n                </div>\r\n            </mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n            <!-- <ng-container #container></ng-container> -->\r\n            <div id=\"chart\" [class]=\"isLoading ? 'skeleton skeleton-graph' : ''\">\r\n                    <ng-container #chartContainer></ng-container>\r\n            </div>\r\n        </mat-card-content>\r\n    </mat-card>\r\n</div>", "import { ViewContainerRef } from \"@angular/core\";\r\nimport * as d3 from 'd3';\r\nimport { ChartTooltipComponent } from \"../../chart-tooltip/chart-tooltip.component\";\r\nimport { Subject } from \"rxjs\";\r\nimport { DateTime, Interval } from \"luxon\";\r\n\r\nexport interface ChartConfig{\r\n    container: ViewContainerRef;\r\n    elementRef: HTMLElement;\r\n    dataSubject: Subject<any>;\r\n}\r\n\r\nexport abstract class Chart {\r\n\r\n    constructor(\r\n        protected container: ViewContainerRef,\r\n        protected elementRef: HTMLElement\r\n    ){ \r\n        // this.svg = (d3.select(this.elementRef).select('#chart') as any)\r\n        //     // 차트가 그려질 svg 영역\r\n        //     .append('svg')\r\n        //     .attr('width', this.width + this.margin.left + this.margin.right)\r\n        //     .attr('height', this.height + this.margin.top + this.margin.bottom)\r\n    }\r\n    \r\n    data: any;\r\n    margin = {\r\n        top: 10, right: 30, bottom: 60, left: 30\r\n    }\r\n    width = 460 - this.margin.left - this.margin.right;\r\n    height = 400 - this.margin.top - this.margin.bottom;\r\n\r\n    /**\r\n     * Selection\r\n     * The first generic \"GElement\" refers to the type of the selected element(s).\r\n     * The second generic \"Datum\" refers to the type of the datum of a selected element(s).\r\n     * The third generic \"PElement\" refers to the type of the parent element(s) in the D3 selection.\r\n     * The fourth generic \"PDatum\" refers to the type of the datum of the parent element(s).\r\n     */\r\n    svg: d3.Selection<SVGSVGElement, unknown, HTMLElement, any> = {} as d3.Selection<SVGSVGElement, unknown, HTMLElement, any>;\r\n    g: d3.Selection<SVGGElement, unknown, HTMLElement, any> = {} as d3.Selection<SVGGElement, unknown, HTMLElement, any>;\r\n    shapes: d3.Selection<d3.BaseType | SVGRectElement, any, any, any> = {} as d3.Selection<d3.BaseType | SVGRectElement, any, any, any>;\r\n    x: d3.ScaleBand<string> = {} as d3.ScaleBand<string>;\r\n    y: d3.ScaleLinear<number, number, never> = {} as d3.ScaleLinear<number, number, never>;\r\n    subX: d3.ScaleBand<string> = {} as d3.ScaleBand<string>;\r\n    xAxis: d3.Axis<string> = {} as d3.Axis<string>;\r\n    yAxis: d3.Axis<d3.NumberValue> = {} as d3.Axis<d3.NumberValue>;\r\n    groups: any[] = [];\r\n    subgroups: any[] = [];\r\n    interval: string[] = [];\r\n\r\n    tooltip!: ChartTooltipComponent;\r\n\r\n    yGridline: d3.Selection<SVGLineElement, any, HTMLElement, any> = {} as d3.Selection<SVGLineElement, any, HTMLElement, any>;\r\n\r\n    createSvg(): void {\r\n        this.svg = (d3.select(this.elementRef).select('#chart') as any)\r\n            // 차트가 그려질 svg 영역\r\n            .append('svg')\r\n            .attr('width', this.width + this.margin.left + this.margin.right)\r\n            .attr('height', this.height + this.margin.top + this.margin.bottom)\r\n    }\r\n\r\n    abstract drawChart(): void;\r\n\r\n    setZoom(): void {\r\n        this.svg.call(this.zoom.bind(this));\r\n    };\r\n\r\n    setMouseOver(selection: d3.Selection<any, any, any, any>):void {\r\n        selection.on('mouseover', (d) => this.mouseOver(d))\r\n    }\r\n\r\n    setMouseMove(selection: d3.Selection<any, any, any, any>): void{\r\n        selection.on('mousemove', (d) => this.mouseMove(d))\r\n    }\r\n\r\n    setMouseOut(selection: d3.Selection<any, any, any, any>): void{\r\n        selection.on('mouseout', (d) => this.mouseOut(d))\r\n    }\r\n\r\n    drawGrid(){\r\n        this.yGridline = d3.selectAll('g.y-axis g.tick')\r\n            .append('line')\r\n            .attr('class', 'gridline')\r\n            .attr('x1', 0)\r\n            .attr('y1', 0)\r\n            .attr('x2', this.width)\r\n            .attr('y2', 0)\r\n            .attr('stroke', '#cde8d4')\r\n            .attr('stroke-dash', '4')\r\n    }\r\n\r\n    removeChart(){\r\n        if(Object.keys(this.svg).length > 0){\r\n            this.svg.remove();\r\n        }\r\n    }\r\n\r\n    setInterval(month: DateTime){\r\n        this.interval = Interval.fromDateTimes(\r\n            month.startOf('month'),\r\n            month.endOf('month')\r\n        ).splitBy({\r\n            day: 1\r\n        }).map((date: Interval) => date.start?.toISODate()) as string[];\r\n    }\r\n\r\n    abstract zoom(svg: d3.Selection<SVGSVGElement, unknown, HTMLElement, any>): void;\r\n    abstract zoomed(event: d3.D3ZoomEvent<HTMLElement, any>): void;\r\n    abstract mouseOver(event: any): void;\r\n    abstract mouseMove(event: any): void;\r\n    abstract mouseOut(event: any): void;\r\n    abstract refineData(data: any, url?: any): any;\r\n\r\n}", "import * as d3 from \"d3\";\r\nimport { Chart } from \"./chart.abstract\";\r\nimport { ChartTooltipComponent } from \"../../chart-tooltip/chart-tooltip.component\";\r\n\r\nexport class BarChart extends Chart{\r\n\r\n    override drawChart(): void {\r\n        this.createSvg();\r\n\r\n        // 바가 생성될 영역\r\n        this.g = this.svg.append('g')\r\n            .attr('transform', `translate(${this.margin.left},${this.margin.top})`)\r\n\r\n        const defs = this.g.append(\"defs\")\r\n        \r\n        defs.append(\"clipPath\")\r\n            .attr(\"id\", \"clip\")\r\n            .append(\"rect\")\r\n            .attr(\"width\", this.width)\r\n            .attr(\"height\", this.height)\r\n\r\n        const translateValue = [-30, 0];\r\n        defs.append('clipPath')\r\n            .attr('id', 'stack-clip')\r\n            .append('rect')\r\n            .attr('width', this.width + translateValue[0])\r\n            .attr('height', this.height)\r\n            .attr('transform', `translate(${translateValue[0]},0)`)\r\n            \r\n        const interval = this.interval;\r\n\r\n        this.y = d3.scaleLinear()\r\n            .domain([0, d3.max(this.data, d => Number((d as any).requests)) ?? 10]).nice()\r\n            .range([this.height, 0]).nice();\r\n\r\n        this.g.append('g')\r\n            // .attr(\"clip-path\", \"url(#stack-clip)\")\r\n            .attr('class', 'y-axis')\r\n            .call(d3.axisLeft(this.y))\r\n            .style('font-family', 'Pretendard-Regular');\r\n\r\n        this.x = d3.scaleBand()\r\n            // .domain(this.data.map((d: any) => d.date))\r\n            .domain(interval)\r\n            .range([0, this.width])\r\n            .padding(0.2);\r\n\r\n        this.xAxis = d3.axisBottom(this.x).tickSizeOuter(0);\r\n\r\n        this.g.append('g')\r\n            .attr('class', 'x-axis')\r\n            .attr('transform', `translate(0, ${this.height})`)\r\n            .attr(\"clip-path\", \"url(#clip)\")\r\n            .call(this.xAxis)\r\n            .selectAll('text')\r\n            .attr('transform', 'translate(-10,0)rotate(-60)')\r\n            .style('text-anchor', 'end')\r\n            .style('font-family', 'Pretendard-Regular')\r\n\r\n\r\n        this.shapes = this.g.selectAll('.mybar')\r\n            .data(this.data)\r\n            .join('rect')\r\n            .attr(\"clip-path\", \"url(#clip)\")\r\n                .attr('class', 'mybar')\r\n                .attr('x', (d: any) => this.x(d.date)!)\r\n                .attr('y', (d: any) => this.height)\r\n                .attr('width', this.x.bandwidth())\r\n                .attr('height', (d: any) => this.height - this.y(d.requests))\r\n                .attr('fill', '#69b3a2')\r\n\r\n        this.shapes\r\n            .transition()\r\n            .duration(500)\r\n            .attr('y', (d:any) => this.y(d.requests))\r\n\r\n        this.setZoom();\r\n        this.setMouseOver(this.shapes);\r\n        this.setMouseMove(this.shapes);\r\n        this.setMouseOut(this.shapes);\r\n\r\n        this.drawGrid();\r\n    }\r\n\r\n    override zoom(svg: d3.Selection<SVGSVGElement, unknown, HTMLElement, any>): void {\r\n        const extent: [[number, number], [number, number]] = [[0, this.margin.top], [this.width, this.height - this.margin.top]];\r\n\r\n        svg.call(\r\n            d3.zoom<SVGSVGElement, unknown>()\r\n                .scaleExtent([1, 8])\r\n                .translateExtent(extent)\r\n                .extent(extent)\r\n                .on('zoom', this.zoomed.bind(this))\r\n        )\r\n    }\r\n\r\n    override zoomed(event: d3.D3ZoomEvent<HTMLElement, any>): void {\r\n        this.x.range([0, this.width].map(d => event.transform.applyX(d)));\r\n        this.svg.selectAll('.mybar').attr('x', (d: any) => {\r\n            return this.x(d.date)!\r\n        })\r\n            .attr('width', this.x.bandwidth());\r\n        this.svg.selectAll('.x-axis').call(this.xAxis as any);\r\n    }\r\n\r\n    override mouseOver(event: any): void {\r\n        d3.select(event.target).style('opacity', 0.5);\r\n        this.tooltip = this.container.createComponent(ChartTooltipComponent).instance;\r\n        this.tooltip.x = event.clientX;\r\n\r\n        this.tooltip.y = event.clientY;\r\n\r\n        this.tooltip.data = event.target.__data__;\r\n    }\r\n\r\n    override mouseMove(event: any): void {\r\n        this.tooltip.onMouseMove(event);\r\n    }\r\n    \r\n    override mouseOut(event: any): void {\r\n        d3.select(event.target).style('opacity', 1);\r\n        this.container.clear();\r\n    }\r\n\r\n    override refineData(data: any, url: any) {\r\n        this.data = data.filter((d: any) => d.url === url)?? [];\r\n        return data.filter((d: any) => d.url === url);\r\n    }\r\n\r\n}", "import { Selection, D3ZoomEvent } from \"d3\";\r\nimport { Chart } from \"./chart.abstract\";\r\nimport * as d3 from 'd3';\r\nimport { ChartTooltipComponent } from \"../../chart-tooltip/chart-tooltip.component\";\r\nimport { DateTime, Interval } from \"luxon\";\r\n\r\nexport class GroupedBarChart extends Chart {\r\n    originalData: any;\r\n\r\n    // subgroup: Array<any> = [];\r\n\r\n    override drawChart(): void {\r\n        // 전체 svg 영역\r\n        // this.svg = (d3.select(this.elementRef).select('#chart') as any)\r\n        // .append('svg')\r\n        // .attr(\"width\", this.width + this.margin.left + this.margin.right)\r\n        // .attr(\"height\", this.height + this.margin.top + this.margin.bottom)\r\n\r\n        this.createSvg();\r\n\r\n        // 줌 적용\r\n        this.svg.call(this.zoom.bind(this));\r\n        \r\n        // 실제 데이터가 그려질 영역\r\n        this.g = this.svg.append('g')\r\n        .attr('transform', `translate(${this.margin.left}, ${this.margin.top})`);\r\n        \r\n        // 클립패스 선언\r\n        this.g.append('defs').append('clipPath')\r\n            .attr('id', 'clip')\r\n            .append('rect')\r\n            .attr('width', this.width)\r\n            .attr('height', this.height)\r\n\r\n        // const interval = this.getIntervalDays(DateTime.now(), DateTime.now()) as string[]\r\n        const interval = this.interval;\r\n        \r\n        // d3.csv('https://raw.githubusercontent.com/holtzy/D3-graph-gallery/master/DATA/data_stacked.csv').then( (data) => {\r\n\r\n        // y축 범위 계산\r\n        const y = d3.scaleLinear()\r\n            .domain([0, d3.max(this.originalData, d => Number((d as any).requests))!])\r\n            .range([this.height, 0])\r\n            .nice();\r\n\r\n        // Y축 그리기\r\n        this.g.append('g')\r\n            .attr('class', 'y-axis')\r\n            .call(d3.axisLeft(y))\r\n            .style('font-family', 'Pretendard-Regular')\r\n\r\n        // x축 범위 계산\r\n        this.x = d3.scaleBand()\r\n            // .domain(this.groups)\r\n            .domain(interval)\r\n            .range([0, this.width])\r\n            .padding(0.2)\r\n\r\n        this.xAxis = d3.axisBottom(this.x).tickSizeOuter(0);\r\n\r\n        // x축 그리기\r\n        this.g.append('g')\r\n            .attr('class', 'x-axis')\r\n            .attr('transform', `translate(0, ${this.height})`)\r\n            .attr(\"clip-path\", \"url(#clip)\")\r\n            .call(this.xAxis)\r\n            .selectAll('text')\r\n            .attr('transform', 'translate(-10,0)rotate(-60)')\r\n            .style('text-anchor', 'end')\r\n            .style('font-family', 'Pretendard-Regular')\r\n\r\n        // 하나의 그룹 내에 그려질 바의 위치 계산\r\n        this.subX = d3.scaleBand()\r\n            .domain(this.subgroups)\r\n            .range([0, this.x.bandwidth()])\r\n            .padding(0.05);\r\n\r\n        // 각 바에 색 지정\r\n        const color = d3.scaleOrdinal()\r\n            .domain(this.subgroups)\r\n            .range(d3.schemeCategory10)\r\n\r\n        \r\n        // console.log(this.data);\r\n        \r\n        // 그래프에 바 그리기\r\n        this.g.append('g')\r\n            .attr(\"clip-path\", \"url(#clip)\")\r\n            .selectAll('g')\r\n            .data(this.data)\r\n            .join('g')\r\n            .attr('class', 'bar-group')\r\n            .attr('transform', (d:any) => {\r\n                // console.log(d);\r\n                \r\n                // 여기서 들어오는 data/d는 데이터 하나하나의 row가 들어옴\r\n                // {date: '2024-05-01', login: 2, monitoring: 3, main: 0}\r\n                return `translate(${this.x(d.date)}, 0)`\r\n            }) // x축의 위치 조정\r\n            .selectAll('rect')\r\n            .data((d: any, i) => {\r\n                // 각 객체마다 하나의 bar를 그려야 하므로 새로운 형태의 객체로 정제\r\n                return this.subgroups.map(key => {\r\n                    return { key: key, value: d[key]}\r\n                })\r\n                // return [{ key: d.url, value: d.requests, group: i }];\r\n            })\r\n            .join('rect')\r\n            .attr('class', 'mybar')\r\n            .attr('x', (d: any) => {\r\n                return this.subX(d.key)!;\r\n            })\r\n            .attr('y', (d: any) => this.height)\r\n            .attr('width', this.subX.bandwidth())\r\n            .attr('height', (d: any) => 0)\r\n            .attr('fill', (d: any) => color(d.key) as any)\r\n            .on('mouseover', (d: any) => this.mouseOver(d))\r\n            .on('mousemove', d => this.mouseMove(d))\r\n            .on('mouseout', d => this.mouseOut(d));\r\n\r\n        \r\n        // 애니메이션 적용\r\n        this.g.selectAll(\".mybar\")\r\n            .transition()\r\n            .duration(300)\r\n            .attr(\"y\", (d: any) => {\r\n                // console.log('데이터', d, 'y는', y(d.value));\r\n                return y(d.value);\r\n            })\r\n            .attr(\"height\", (d: any) => this.height - y(d.value))\r\n            .delay((d, i) =>  (i * 10))\r\n\r\n        // 범례 계산\r\n        // const legendColor = d3.scaleOrdinal()\r\n        //     .domain(this.subgroups)\r\n        //     .range(d3.schemeSet1);\r\n\r\n        // 범례 위치\r\n        const legendPosition = {\r\n            x: this.width - (this.margin.right * 1.5),\r\n            y: this.margin.top\r\n        }\r\n\r\n        // 범례 그리기\r\n        const size = 20\r\n        const legendGroup = this.svg\r\n            .append('g')\r\n            .attr('opacity', 0.5);\r\n        legendGroup\r\n            .selectAll(\"mydots\")\r\n            .data(this.subgroups)\r\n            .enter()\r\n            .append(\"rect\")\r\n            .attr(\"x\", legendPosition.x)\r\n            .attr(\"y\", function (d, i) { return legendPosition.y + i * (size + 5) }) // 100 is where the first dot appears. 25 is the distance between dots\r\n            .attr(\"width\", size)\r\n            .attr(\"height\", size)\r\n            .style(\"fill\", function (d: any) { return color(d) } as any)\r\n\r\n        // 각 범례 라벨\r\n        legendGroup.selectAll(\"mylabels\")\r\n            .data(this.subgroups)\r\n            .join(\"text\")\r\n            .attr(\"x\", legendPosition.x + size * 1.2)\r\n            .attr(\"y\", function (d, i) { return legendPosition.y + i * (size + 5) + (size / 2) }) // 100 is where the first dot appears. 25 is the distance between dots\r\n            .style(\"fill\", function (d: any) { return color(d) } as any)\r\n            .text(function (d) { return d})\r\n            .attr(\"text-anchor\", \"left\")\r\n            .style(\"alignment-baseline\", \"middle\")\r\n        // })\r\n\r\n        this.drawGrid();\r\n    }\r\n\r\n    override zoom(svg: Selection<SVGSVGElement, unknown, HTMLElement, any>): void {\r\n        const extent: [[number, number], [number, number]] = [[0, this.margin.top], [this.width, this.height - this.margin.top]];\r\n\r\n        svg.call(\r\n        d3.zoom<SVGSVGElement, unknown>()\r\n            .scaleExtent([1, 15])\r\n            .translateExtent(extent)\r\n            .extent(extent)\r\n            .on('zoom', this.zoomed.bind(this))\r\n        )\r\n    }\r\n\r\n    override zoomed(event: D3ZoomEvent<HTMLElement, any>): void {\r\n        this.x.range([0, this.width].map(d => event.transform.applyX(d)));\r\n        this.subX.rangeRound([0, this.x.bandwidth()]);\r\n        \r\n        // console.log(this.svg.node()?.parentNode);\r\n        \r\n        this.svg.selectAll('.bar-group').attr('transform', (d: any) => {\r\n        // console.log('transform 내부 ', d);\r\n        return `translate(${this.x(d.date)},0)`;\r\n        });\r\n        this.svg.selectAll('.mybar').attr('x', (d: any) => {return this.subX(d.key)!}).attr('width', this.subX.bandwidth());\r\n\r\n        // x축 업데이트\r\n        this.svg.selectAll('.x-axis').call(this.xAxis as any);\r\n    }\r\n\r\n    override mouseOver(event: any): void {\r\n        d3.select(event.target).style('opacity', 0.5);\r\n        this.tooltip = this.container.createComponent(ChartTooltipComponent).instance;\r\n        this.tooltip.x = event.clientX;\r\n\r\n        this.tooltip.y = event.clientY;\r\n\r\n        this.tooltip.data = event.target.__data__;\r\n    }\r\n\r\n    override mouseMove(event: any): void {\r\n        this.tooltip.onMouseMove(event);\r\n    }\r\n\r\n    override mouseOut(event: any): void {\r\n        d3.select(event.target).style('opacity', 1);\r\n        this.container.clear();\r\n    }\r\n\r\n    override refineData(data: any, url?: any) {\r\n        // subgroup\r\n        // Nitrogen,normal,stress 이런 데이터를\r\n        // login, monitoring 이것처럼 url별로\r\n        // console.log('원래',data);\r\n\r\n        this.originalData = data;\r\n\r\n        const check = new Set();\r\n        this.subgroups = data.filter((d: any) => {\r\n            const cur = d.url;\r\n            const exist = check.has(cur);\r\n            check.add(cur);\r\n            return !exist;\r\n        }).map((d: any) => {\r\n            return (d.url === undefined || d.url === '') ? 'main' : d.url\r\n        });\r\n\r\n        this.data = data.reduce((acc: any, cur: any) => {\r\n            const existing = acc.find((d: any) => d.date === cur.date);\r\n\r\n            const curUrl = cur.url === '' ? 'main' : cur.url;\r\n\r\n            if(existing){\r\n                // existing[curUrl] = (existing[curUrl] || 0) + parseInt(cur.requests, 10);\r\n                existing[curUrl] = parseInt(cur.requests, 10);\r\n            }else {\r\n                const newItem = { date: cur.date, [curUrl]: parseInt(cur.requests, 10)};\r\n                acc.push(newItem);\r\n            }\r\n\r\n            return acc;\r\n        }, [])\r\n        // console.log('정제1',this.data);\r\n\r\n        this.data = this.data.map((item: any) => {\r\n            this.subgroups.forEach(url => {\r\n                if (!(item[url])) {\r\n                    // console.log(this.subgroups);\r\n\r\n                    item[url] = 0;\r\n                }\r\n            })\r\n            return item;\r\n        });\r\n        // console.log('정제 데이터', this.data);\r\n        \r\n\r\n        this.sortDataByDate(this.data);\r\n    }\r\n\r\n    sortDataByDate(data: any){\r\n        return data.sort((a: any, b: any) => {\r\n            const dateA = DateTime.fromISO(a.date);\r\n            const dateB = DateTime.fromISO(b.date);\r\n            return dateA.toMillis() - dateB.toMillis();\r\n        })\r\n    }\r\n\r\n    // 선택한 달의 날짜 배열 구하기\r\n    getIntervalDays(start: DateTime, end: DateTime){\r\n        return Interval.fromDateTimes(\r\n            start.minus({ month: 1 }).startOf('month'),\r\n            end.minus({ month: 1 }).endOf('month')\r\n        ).splitBy({\r\n            day: 1\r\n        }).map((date: Interval) => date.start?.toISODate())\r\n    }\r\n\r\n}", "import { Selection, D3ZoomEvent } from \"d3\";\r\nimport { Chart } from \"./chart.abstract\";\r\nimport * as d3 from 'd3';\r\nimport { ChartTooltipComponent } from \"../../chart-tooltip/chart-tooltip.component\";\r\n\r\nexport class DonutChart extends Chart {\r\n\r\n    override drawChart(): void {\r\n    // const width = 450;\r\n    // const height = 450;\r\n    // this.width = this.width * 1.18;\r\n    // this.height = this.height * 1.18;\r\n    const margin = 10;\r\n\r\n    const radius = Math.max(this.width, this.height) / 2 - margin;\r\n    // const data = { a: 9, b: 20, c: 30, d: 8, e: 12 };\r\n\r\n    const total = d3.sum(Object.values(this.data));\r\n\r\n    // const color = d3.scaleOrdinal(['#69b3a2'])\r\n    const color = d3.scaleOrdinal(d3.schemeCategory10);\r\n\r\n    const pie = d3.pie()\r\n      .value((d:any) => d[1])\r\n      .padAngle(.02)\r\n      .sort(null);\r\n\r\n    const dataReady = pie(Object.entries(this.data) as any);\r\n    // console.log('파이데이터',dataReady);\r\n    \r\n\r\n    this.createSvg();\r\n\r\n    // this.svg = (d3.select(this.elementRef).select('#chart') as any)\r\n    //   .append('svg')\r\n    //     .attr('width', this.width)\r\n    //     .attr('height', this.height)\r\n\r\n    this.g = this.svg\r\n        .append('g')\r\n      .attr('transform', `translate(${this.width / 2 - 20}, ${this.height / 2})`);\r\n    \r\n    const arc = d3.arc()\r\n      .innerRadius(radius * 0.5)\r\n      .outerRadius(radius * 0.8)\r\n      .cornerRadius(3);\r\n\r\n    const arcAny = arc as any;\r\n\r\n    const duration = 100;\r\n    \r\n    this.shapes = this.g.selectAll('.donut-arc')\r\n      .data(dataReady, (d: any) => d.id)\r\n      .join('path')\r\n      .attr('class', 'donut-arc')\r\n      .attr('fill', (d: any) => color(d.data[0]) as any)\r\n      // .attr('stroke', 'transparent')\r\n      .style('stroke-width', '1px')\r\n\r\n    this.shapes\r\n      .transition().delay((d: any, i: any) => i * duration).duration(duration)\r\n      .attrTween('d', (d: any) => {\r\n        const i = d3.interpolate(d.startAngle, d.endAngle);\r\n        // console.log('데이터',d);\r\n        \r\n        return (t: any) => {\r\n          d.endAngle = i(t);\r\n          return arcAny(d)\r\n        }\r\n      })\r\n\r\n    // 'total request' 텍스트 추가 로직\r\n    this.svg.append('text')\r\n      .attr('text-anchor', 'middle')\r\n      .text('Total Request')\r\n      .style('font-size', '1.5em')\r\n      .attr(\"transform\", \"translate(\" + (this.width / 2 - 20) + \",\" + (this.height / 2 - 20) + \")\")// 'total' 텍스트보다 약간 위에 위치\r\n      .transition()\r\n      .duration(500)\r\n      .attr(\"fill-opacity\", 0.6); \r\n\r\n    // 실제 request 값 텍스트 추가 로직\r\n    this.svg.append('text')\r\n      .attr('text-anchor', 'middle')\r\n      .text(total)\r\n      .style('font-size', '2em')\r\n      .attr(\"transform\", \"translate(\" + (this.width / 2 - 20) + \",\" + (this.height / 2 + 20) + \")\")\r\n      .transition()\r\n      .duration(500)\r\n      .attr(\"fill-opacity\", 0.6)\r\n    \r\n    // 폴리라인 및 라벨 추가 로직\r\n    // const outerArc = d3.arc()\r\n    //   .innerRadius(radius * 0.8)\r\n    //   .outerRadius(radius * 0.8);\r\n\r\n    // this.g\r\n    //   .selectAll('allPolylines')\r\n    //   .data(dataReady)\r\n    //   .join('polyline')\r\n    //     .attr('stroke', 'black')\r\n    //     .attr('fill', 'none')\r\n    //     .attr('stroke-width', 1)\r\n    //     .attr('points', (d: any) : any => {\r\n    //       return [arc.centroid(d), arc.centroid(d)]\r\n    //     })\r\n    //     // 기존 -> 라벨이 겹치는 문제 발생\r\n    //     // .attr('transform', (d: any) => {\r\n    //     //   const pos = outerArc.centroid(d)\r\n    //     //   const midAngle = d.startAngle + (d.endAngle - d.startAngle) / 2;\r\n    //     //   pos[0] = (radius) * 0.73 * (midAngle < Math.PI ? 1 : -1);\r\n    //     //   return `translate(${pos})`;\r\n    //     // })\r\n    //     .transition().duration(1000)\r\n    //     .attr('points', (d: any) : any => {\r\n    //       // console.log(d);\r\n          \r\n    //       const posA = arc.centroid(d);\r\n    //       const posB = outerArc.centroid(d);\r\n    //       const midangle = d.startAngle + (d.endAngle - d.startAngle) / 2;\r\n    //       const posC = outerArc.centroid(d);\r\n    //       // console.log(midangle);\r\n    //       posC[0] = ((radius * 0.7) + (5 * d.index)) * (midangle < Math.PI ? 1 : -1);\r\n    //       posC[1] = posC[1] + (10 * d.index * (midangle < Math.PI ? 1 : -1));\r\n\r\n    //       posB[0] = Math.min(posA[0], posC[0]) + Math.abs(posA[0] - posC[0]) / 2;\r\n    //       posB[1] = Math.min(posA[1], posC[1]) + Math.abs(posA[1] - posC[1]) / 2;\r\n\r\n    //       return [posA, posC];\r\n    //     })\r\n\r\n    // // let lastAngle;\r\n\r\n    //   this.g\r\n    //     .selectAll('allLabels')\r\n    //     .data(dataReady)\r\n    //     .join('text')\r\n    //       .text((d: any) => {\r\n    //         return d.data[0];\r\n    //       })\r\n    //       .attr('opacity', 0)\r\n    //       .attr('transform', (d: any) => {\r\n    //         const pos = outerArc.centroid(d)\r\n    //         const midAngle = d.startAngle + (d.endAngle - d.startAngle) / 2;\r\n    //         pos[0] = ((radius * 0.7) + (5 * d.index)) * (midAngle < Math.PI ? 1 : -1);\r\n\r\n    //         pos[1] = pos[1] + (10 * d.index * (midAngle < Math.PI ? 1 : -1));\r\n    //         return `translate(${pos})`;\r\n    //       })\r\n    //       .style('text-anchor', (d: any) => {\r\n    //         const midAngle = d.startAngle + (d.endAngle - d.startAngle) / 2;\r\n    //         return (midAngle < Math.PI ? 'start' : 'end');\r\n    //       })\r\n    //       .transition().delay(1000).duration(300)\r\n    //       .attr('opacity', 1)\r\n\r\n      // 범례 추가 로직\r\n      const legendStart = this.width - 30;\r\n      this.svg\r\n        .append('g')\r\n        .attr('class', 'donut-legend-circle')\r\n          .selectAll('mydots').data(this.subgroups)\r\n          .join('circle')\r\n          .attr('cx', legendStart)\r\n          .attr('cy', (d, i) => 20 + (i * 25))\r\n          .attr('r', 7)\r\n          .style('fill', (d) => color(d))\r\n\r\n      this.svg\r\n          .append('g')\r\n          .attr('class', 'donut-legend-labels')\r\n            .selectAll('mylabels')\r\n            .data(this.subgroups)\r\n            .join('text')\r\n            .attr('x', legendStart + 10)\r\n            .attr('y', (d, i) => 20 + (i * 25))\r\n            .style('fill', d => color(d))\r\n            .text(d => d)\r\n            .attr('text-anchor', 'left')\r\n            .style('alignment-baseline', 'middle')\r\n            .style('font-family', 'Pretendard-Regular')\r\n\r\n      // 각 파이 키,값 텍스트 추가 로직 -> 문자열 겹침 문제 발생\r\n      // const text = this.g.selectAll('text')\r\n      //   .data(dataReady)\r\n      //   .join('text')\r\n      //   .attr('transform', (d: any) => `translate(${arc.centroid(d)})`)\r\n      //   .attr('dy', '0.35em')\r\n\r\n      // text.append(\"tspan\")\r\n      //   .attr(\"fill-opacity\", 0)\r\n      //   .attr('fill', 'white')\r\n      //   .attr('font-size', '1.2em')\r\n      //   .transition().delay((d, i) => i * duration).duration(duration)\r\n      //   .attr(\"x\", 0)\r\n      //   .attr(\"y\", \"-0.7em\")\r\n      //   .attr(\"fill-opacity\", 1)\r\n      //   .style(\"font-weight\", \"bold\")\r\n      //   .text((d: any) => d.data[0]);\r\n\r\n      // text.filter(d => (d.endAngle - d.startAngle) > 0.25).append(\"tspan\")\r\n      //   .attr(\"fill-opacity\", 0)\r\n      //   .attr('fill', 'white')\r\n      //   .attr('font-size', '1.2em')\r\n      //   .transition().delay((d, i) => i * duration).duration(duration)\r\n      //   .attr(\"x\", 0)\r\n      //   .attr(\"y\", \"1em\")\r\n      //   .attr(\"fill-opacity\", 0.7)\r\n      //   .text((d: any) => d.data[1]);\r\n      \r\n      this.setMouseOver(this.shapes);\r\n      this.setMouseMove(this.shapes);\r\n      this.setMouseOut(this.shapes);\r\n    }\r\n\r\n    override zoom(svg: Selection<SVGSVGElement, unknown, HTMLElement, any>): void {\r\n        \r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    override zoomed(event: D3ZoomEvent<HTMLElement, any>): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    override mouseOver(event: any): void {\r\n        d3.select(event.target).style('opacity', 0.5);\r\n        this.tooltip = this.container.createComponent(ChartTooltipComponent).instance;\r\n        this.tooltip.x = event.clientX;\r\n        this.tooltip.y = event.clientY;\r\n\r\n        const tooltipData = {[event.target.__data__.data[0]]: event.target.__data__.data[1]};\r\n        this.tooltip.data = tooltipData;\r\n    }\r\n    override mouseMove(event: any): void {\r\n        this.tooltip.onMouseMove(event);\r\n    }\r\n    override mouseOut(event: any): void {\r\n        d3.select(event.target).style('opacity', 1);\r\n        this.container.clear();\r\n    }\r\n\r\n    override refineData(data: any, url?: any) {\r\n      // console.log(data);\r\n      data.filter( (d: any) => \r\n        d.url === ''\r\n      ).map((d: any) => {\r\n        d.url = 'main';\r\n        return d;\r\n    })\r\n\r\n    // console.log('1차', data);\r\n    \r\n    this.data = data.reduce((acc: any, cur: any) => {\r\n      const curUrl = cur.url.split('-')[0];\r\n\r\n      acc[curUrl] ?\r\n      acc[curUrl] = acc[curUrl] + parseInt(cur.requests) : \r\n      acc[curUrl] = parseInt(cur.requests);\r\n\r\n      return acc;\r\n    }, {});\r\n\r\n    this.subgroups = Object.keys(this.data);\r\n    // console.log('서브', this.subgroups);\r\n    \r\n\r\n    // console.log('2차', this.data);\r\n\r\n    }\r\n\r\n}", "import { Selection, D3ZoomEvent } from \"d3\";\r\nimport { Chart } from \"./chart.abstract\";\r\nimport * as d3 from 'd3';\r\nimport { ChartTooltipComponent } from \"../../chart-tooltip/chart-tooltip.component\";\r\nimport { DateTime, Interval } from \"luxon\";\r\n\r\nexport class StackBarChart extends Chart {\r\n    originalData: any;\r\n\r\n    override drawChart(): void {\r\n        this.createSvg();\r\n\r\n        this.svg.call(this.zoom.bind(this));\r\n\r\n        this.g = this.svg.append('g')\r\n            .attr('transform',\r\n                `translate(${this.margin.left}, ${this.margin.top})`\r\n            );\r\n\r\n        const defs = this.g.append(\"defs\")\r\n\r\n        defs.append(\"clipPath\")\r\n            .attr(\"id\", \"clip\")\r\n            .append(\"rect\")\r\n            .attr(\"width\", this.width)\r\n            .attr(\"height\", this.height)\r\n\r\n\r\n        const translateValue = [0,0];\r\n        defs.append('clipPath')\r\n            .attr('id', 'stack-clip')\r\n            .append('rect')\r\n            .attr('width', this.width)\r\n            .attr('height', this.height)\r\n            .attr('transform', `translate(${translateValue[0]},0)`)\r\n\r\n        const interval = this.interval;\r\n            \r\n        this.y = d3.scaleLinear()\r\n            .domain([0,d3.max(this.originalData, d => Number((d as any).requests))!])\r\n            .range([this.height, 0]).nice();\r\n\r\n        this.yAxis = d3.axisLeft(this.y);\r\n\r\n        const y = this.g.append('g')\r\n            .attr('class', 'y-axis')\r\n            .call(this.yAxis)\r\n            .style('font-family', 'Pretendard-Regular');\r\n\r\n        this.x = d3.scaleBand()\r\n            .domain(interval)\r\n            .range([0, this.width])\r\n            .padding(0.2);\r\n\r\n        this.xAxis = d3.axisBottom(this.x).tickSizeOuter(0);\r\n\r\n        this.g.append('g')\r\n            .attr('class', 'x-axis')\r\n            .attr('transform', `translate(0, ${this.height})`)\r\n            .attr(\"clip-path\", \"url(#clip)\")\r\n            .call(this.xAxis)\r\n            .selectAll('text')\r\n            .attr('transform', 'translate(-10,0)rotate(-60)')\r\n            .attr('text-anchor', 'end')\r\n            .style('font-family', 'Pretendard-Regular');\r\n\r\n        // y.attr(\"clip-path\", \"url(#stack-clip)\")\r\n\r\n        const color = d3.scaleOrdinal()\r\n            .domain(this.subgroups)\r\n            .range(d3.schemeCategory10);\r\n\r\n        const stackedData = d3.stack()\r\n            .keys(this.subgroups)(this.data as any);\r\n\r\n        this.g.append('g')\r\n            .attr('clip-path', 'url(#clip)')\r\n            .selectAll('g')\r\n            .data(stackedData)\r\n            .join('g')\r\n                .attr('fill', (d: any) => color(d.key) as any)\r\n                .selectAll('rect')\r\n                // d[0]: 시작위치\r\n                // d[1]: 끝위치\r\n                // d[2]: 데이터\r\n                .data(d => d)\r\n                .join('rect')\r\n                    .attr('class', 'mybar')\r\n                    .attr('x', (d: any) => this.x(d.data.date)!)\r\n                    .attr('y', d => this.height)\r\n                    .attr('width', this.x.bandwidth())\r\n                    .on('mouseover', (d: any) => this.mouseOver(d))\r\n                    .on('mousemove', (d: any) => this.mouseMove(d))\r\n                    .on('mouseout', (d: any) => this.mouseOut(d))\r\n            .transition()\r\n                .duration(800)\r\n                .attr('y', d => this.y(d[1]))\r\n                .attr('height', d => {\r\n                    return this.y(d[0]) - this.y(d[1]);\r\n                });\r\n        // });\r\n\r\n        this.drawGrid();\r\n    }\r\n\r\n    override zoom(svg: Selection<SVGSVGElement, unknown, HTMLElement, any>): void {\r\n        const extent: [[number, number], [number, number]] = [[0, 0], [this.width, this.height]];\r\n\r\n        svg.call(\r\n        d3.zoom<SVGSVGElement, unknown>()\r\n            .scaleExtent([1, 8])\r\n            .translateExtent(extent)\r\n            .extent(extent)\r\n            .on('zoom', this.zoomed.bind(this))\r\n        )\r\n    }\r\n\r\n    override zoomed(event: D3ZoomEvent<HTMLElement, any>): void {\r\n        this.x.range([0, this.width].map(d => event.transform.applyX(d)));\r\n        this.y.range([this.height, 0].map(d => event.transform.applyY(d)));\r\n        this.svg.selectAll('.mybar').attr('y', (d: any) => {\r\n            // console.log('스택 줌',d);\r\n            \r\n            return this.y(d[1])!\r\n        }).attr('height', (d: any) => this.y(d[0]) - this.y(d[1]));\r\n        this.svg.selectAll('.mybar').attr('x', (d: any) => {\r\n            return this.x(d.data.date)!\r\n        }).attr('width', this.x.bandwidth())\r\n        this.svg.selectAll('.y-axis').call(this.yAxis as any);\r\n        this.svg.selectAll('.x-axis').call(this.xAxis as any);\r\n    }\r\n\r\n    override mouseOver(event: any): void {\r\n        d3.select(event.target).style('opacity', 0.5);\r\n        this.tooltip = this.container.createComponent(ChartTooltipComponent).instance;\r\n        this.tooltip.x = event.clientX;\r\n        this.tooltip.y = event.clientY;\r\n\r\n        const parentNode = d3.select(event.target).node().parentNode;\r\n        const data = d3.select(parentNode).datum();\r\n        const subgroupName = (data as any).key;\r\n\r\n        const subgroupValue = event.target.__data__.data[subgroupName];\r\n        this.tooltip.data = { [subgroupName]: subgroupValue };\r\n    }\r\n\r\n    override mouseMove(event: any): void {\r\n        this.tooltip.onMouseMove(event);\r\n    }\r\n\r\n    override mouseOut(event: any): void {\r\n        d3.select(event.target).style('opacity', 1);\r\n        this.container.clear();\r\n    }\r\n\r\n    override refineData(data: any, url?: any) {\r\n        \r\n        this.originalData = data;\r\n\r\n        const check = new Set();\r\n        this.subgroups = data.filter((d: any) => {\r\n            const cur = d.url;\r\n            const exist = check.has(cur);\r\n            check.add(cur);\r\n            return !exist;\r\n        }).map((d: any) => {\r\n            return (d.url === undefined || d.url === '') ? 'main' : d.url;\r\n        });\r\n\r\n        // console.log('데이턴ㅇㄹ', data);\r\n        this.data = data.reduce((acc: any, cur: any) => {\r\n            const existing = acc.find((d: any) => d.date === cur.date);\r\n\r\n            const curUrl = cur.url === '' ? 'main' : cur.url;\r\n\r\n            if(existing) {\r\n                existing[curUrl] = parseInt(cur.requests, 10);\r\n            }else {\r\n                const newItem = {date: cur.date, [curUrl]: parseInt(cur.requests, 10)};\r\n                acc.push(newItem);\r\n            }\r\n\r\n            return acc;\r\n        }, [])\r\n\r\n        this.data = this.data.map((item: any) => {\r\n            this.subgroups.forEach(url => {\r\n                if(!item[url]){\r\n                    item[url] = 0;\r\n                }\r\n            })\r\n            return item;\r\n        })\r\n\r\n        this.sortDataByDate(this.data);\r\n\r\n    }\r\n\r\n    sortDataByDate(data: any) {\r\n        return data.sort((a: any, b: any) => {\r\n            const dateA = DateTime.fromISO(a.date);\r\n            const dateB = DateTime.fromISO(b.date);\r\n            return dateA.toMillis() - dateB.toMillis();\r\n        })\r\n    }\r\n\r\n    // 선택한 달의 날짜 배열 구하기\r\n    getIntervalDays(start: DateTime, end: DateTime) {\r\n        return Interval.fromDateTimes(\r\n            start.startOf('month'),\r\n            end.endOf('month')\r\n        ).splitBy({\r\n            day: 1\r\n        }).map((date: Interval) => date.start?.toISODate())\r\n    }\r\n\r\n}", "import { Selection, D3ZoomEvent } from \"d3\";\r\nimport { Chart } from \"./chart.abstract\";\r\nimport * as d3 from 'd3';\r\nimport { ChartTooltipComponent } from \"../../chart-tooltip/chart-tooltip.component\";\r\n\r\nexport class HorizontalStackBar extends Chart {\r\n    stackX: d3.ScaleLinear<number, number, never> = {} as d3.ScaleLinear<number, number, never>;\r\n    stackY: d3.ScaleBand<string> = {} as d3.ScaleBand<string>;\r\n    stackYAxis: d3.Axis<string> = {} as d3.Axis<string>;\r\n    stackXAxis: d3.Axis<d3.NumberValue> = {} as d3.Axis<d3.NumberValue>;\r\n\r\n    override drawChart(): void {\r\n        this.margin.left = this.margin.left + 15;\r\n\r\n        this.svg = (d3.select(this.elementRef).select('#chart') as any)\r\n            .append('svg')\r\n            .attr('width', this.width + this.margin.left + this.margin.right)\r\n            .attr('height', this.height + this.margin.top + this.margin.bottom)\r\n            .call(this.zoom.bind(this));\r\n\r\n        this.g = this.svg.append('g')\r\n            .attr('transform',\r\n            `translate(${this.margin.left}, ${this.margin.top})`\r\n            );\r\n\r\n        // 클립패스 설정\r\n        this.g.append(\"defs\").append(\"clipPath\")\r\n            .attr(\"id\", \"stacked-bar-clip\")\r\n            .append(\"rect\")\r\n            .attr(\"width\", this.width)\r\n            .attr(\"height\", this.height)\r\n\r\n\r\n        d3.csv(\"https://raw.githubusercontent.com/holtzy/D3-graph-gallery/master/DATA/data_stacked.csv\").then((data) => {\r\n        const subgroups = data.columns.slice(1);\r\n\r\n        this.groups = data.map((d:any) => {\r\n            // console.log(d);\r\n            return d.group;\r\n        });\r\n\r\n        this.stackY = d3.scaleBand()\r\n            .domain(this.groups)\r\n            .range([this.height, 0])\r\n            .padding(0.2);\r\n            \r\n        this.stackYAxis = d3.axisLeft(this.stackY).tickSizeOuter(0);\r\n\r\n        this.stackX = d3.scaleLinear()\r\n            .domain([0,60])\r\n            .range([0, this.width]);\r\n\r\n        this.stackXAxis = d3.axisBottom(this.stackX);\r\n\r\n        this.g.append('g')\r\n            .attr('class', 'x-axis')\r\n            .attr(\"clip-path\", \"url(#stacked-bar-clip)\")\r\n            .attr('transform', `translate(0, ${this.height})`)\r\n            .call(this.stackXAxis);\r\n\r\n\r\n        this.g.append('g')\r\n            .call(this.stackYAxis)\r\n            .selectAll('text')\r\n            .attr('transform', `translate(-15,0)`)\r\n            .style('text-anchor', 'middle');\r\n\r\n        const color = d3.scaleOrdinal()\r\n            .domain(subgroups)\r\n            .range(['#e41a1c', '#377eb8', '#4daf4a']);\r\n\r\n        const stackedData = d3.stack()\r\n            .keys(subgroups)(data as any);\r\n\r\n        console.log('stackedData', stackedData);\r\n        \r\n        /**\r\n        group,Nitrogen,normal,stress\r\n        banana,12,1,13\r\n        poacee,6,6,33\r\n        sorgho,11,28,12\r\n        triticum,19,6,1\r\n         */\r\n\r\n        this.g.append('g')\r\n            .attr('class', 'stacked-bar')\r\n            .attr(\"clip-path\", \"url(#stacked-bar-clip)\")\r\n            // 현재 선택되어 있는 자식 요소중에서 .stacked-bar를 지닌 요소를 선택\r\n            // 즉, 바로 앞전 코드에서 선택한 요소는 미포함됨\r\n            .selectAll('.stacked-bar')\r\n            .data(stackedData)\r\n            .join('g')\r\n                .attr('fill', (d: any) => color(d.key) as any)\r\n                .selectAll('rect')\r\n                // d[0]: 시작위치\r\n                // d[1]: 끝위치\r\n                // d[2]: 데이터\r\n                .data(d => d)\r\n                .join('rect')\r\n                    .attr('class', 'mybar')\r\n                    .attr('x', (d: any) => {\r\n                        // console.log('x좌표', this.stackX(d[0]), '데이터', d.data);\r\n                        return this.stackX(d[0])!\r\n                    })\r\n                    .attr('y', (d: any) => this.stackY(d.data.group)!)\r\n                    .attr('height', this.stackY.bandwidth())\r\n                    .attr('width', d => this.stackX(d[1]) - this.stackX(d[0]))\r\n                    .on('mouseover', (d: any) => this.mouseOver(d))\r\n                    .on('mousemove', (d: any) => this.mouseMove(d))\r\n                    .on('mouseout', (d: any) => this.mouseOut(d))\r\n            // .transition()\r\n            //     .duration(800)\r\n                // .attr('y', d => y(d[1]))\r\n                // .attr('height', d => y(d[0]) - y(d[1]));\r\n        });\r\n    }\r\n\r\n    override zoom(svg: Selection<SVGSVGElement, unknown, HTMLElement, any>): void {\r\n        const extent: [[number, number], [number, number]] = [[0, this.margin.top], [this.width - this.margin.right, this.height - this.margin.top]];\r\n\r\n        svg.call(\r\n        d3.zoom<SVGSVGElement, unknown>()\r\n            .scaleExtent([1, 8])\r\n            .translateExtent(extent)\r\n            .extent(extent)\r\n            .on('zoom', this.zoomed.bind(this))\r\n        )\r\n    }\r\n\r\n    override zoomed(event: D3ZoomEvent<HTMLElement, any>): void {\r\n      this.stackX.range([0, this.width - this.margin.right].map(d => event.transform.applyX(d)));\r\n      this.svg.selectAll('.mybar').attr('x', (d: any) => {\r\n          return this.stackX(d[0])!\r\n      }).attr('width', (d: any) => this.stackX(d[1]) - this.stackX(d[0]));\r\n    this.svg.selectAll('.x-axis').call(this.stackXAxis as any);\r\n    }\r\n\r\n    override mouseOver(event: any): void {\r\n        d3.select(event.target).style('opacity', 0.5);\r\n        this.tooltip = this.container.createComponent(ChartTooltipComponent).instance;\r\n        this.tooltip.x = event.clientX;\r\n        this.tooltip.y = event.clientY;\r\n\r\n        const parentNode = d3.select(event.target).node().parentNode;\r\n        const data = d3.select(parentNode).datum();\r\n        const subgroupName = (data as any).key;\r\n\r\n        const subgroupValue = event.target.__data__.data[subgroupName];\r\n        this.tooltip.data = { [subgroupName]: subgroupValue };\r\n    }\r\n\r\n    override mouseMove(event: any): void {\r\n        this.tooltip.onMouseMove(event);\r\n    }\r\n\r\n    override mouseOut(event: any): void {\r\n        d3.select(event.target).style('opacity', 1);\r\n        this.container.clear();\r\n    }\r\n\r\n    override refineData(data: any, url?: any) {\r\n        \r\n    }\r\n\r\n}", "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { initPath } from '../membership/functions/decorators/init-path.decorator';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MonitoringService {\r\n\r\n  @initPath('monitoring')\r\n  baseUrl: any;\r\n\r\n  data$: BehaviorSubject<any> = new BehaviorSubject({});\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n  ) {}\r\n\r\n  getData(){\r\n    return this.http.get(this.baseUrl+'/pv');\r\n  }\r\n}\r\n", "import { Component, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { ChartComponent } from '../../chart/chart.component';\r\nimport { BarChart } from '../../chart/classes/bar-chart.class';\r\nimport { GroupedBarChart } from '../../chart/classes/grouped-bar.class';\r\nimport { DonutChart } from '../../chart/classes/donut-chart.class';\r\nimport { StackBarChart } from '../../chart/classes/stack-bar.class';\r\nimport { HorizontalStackBar } from '../../chart/classes/horisontal-stack-bar.class';\r\nimport { MonitoringService } from '../../../monitoring.service';\r\nimport { Store } from '@ngrx/store';\r\nimport { AppState } from '../../../../../core/store/state.interface';\r\nimport { selectPageView } from '../../../../../core/store/monitoring/monitoring.selector';\r\nimport { filter } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-usage-graph',\r\n  templateUrl: './usage-graph.component.html',\r\n  styleUrl: './usage-graph.component.scss'\r\n})\r\nexport class UsageGraphComponent implements OnInit {\r\n\r\n  constructor(\r\n    private monitoringService: MonitoringService,\r\n    private store: Store<AppState>,\r\n  ){}\r\n\r\n  @ViewChild('container', {read: ViewContainerRef, static: true}) container!: ViewContainerRef;\r\n\r\n  ngOnInit(): void {\r\n    // this.initData();\r\n    this.drawChart('login');\r\n    this.drawChart('monitoring');\r\n    this.drawGroup();\r\n    this.drawStack();\r\n    this.drawDonut();\r\n    // this.drawHrizontalStack();\r\n  }\r\n\r\n  // initData(){\r\n    // this.monitoringService.getData().subscribe({\r\n    //   next: d => {\r\n    //     console.log('데이터', d);\r\n        \r\n    //     this.monitoringService.data$.next(d);\r\n    //   }\r\n    // });\r\n  // }\r\n\r\n  drawChart(path: string){\r\n    const componentRef = this.container.createComponent(ChartComponent)\r\n    const instance = componentRef.instance;\r\n    const barChart = new BarChart(instance.container, instance.elRef.nativeElement)\r\n    componentRef.setInput('chart', barChart);\r\n    componentRef.setInput('path', path)\r\n    // instance.event.pipe(take(1)).subscribe(() => this.isLoading = false);\r\n  }\r\n\r\n  drawGroup(){\r\n    const componentRef = this.container.createComponent(ChartComponent)\r\n    const instance = componentRef.instance;\r\n    const groupedBarChart = new GroupedBarChart(instance.container, instance.elRef.nativeElement)\r\n    componentRef.setInput('chart', groupedBarChart);\r\n  }\r\n\r\n  drawDonut(){\r\n    const componentRef = this.container.createComponent(ChartComponent)\r\n    const instance = componentRef.instance;\r\n    const groupedBarChart = new DonutChart(instance.container, instance.elRef.nativeElement)\r\n    componentRef.setInput('chart', groupedBarChart);\r\n  }\r\n\r\n  drawStack(){\r\n    const componentRef = this.container.createComponent(ChartComponent)\r\n    const instance = componentRef.instance;\r\n    const groupedBarChart = new StackBarChart(instance.container, instance.elRef.nativeElement)\r\n    componentRef.setInput('chart', groupedBarChart);\r\n  }\r\n\r\n  drawHrizontalStack(){\r\n    const componentRef = this.container.createComponent(ChartComponent)\r\n    const instance = componentRef.instance;\r\n    const groupedBarChart = new HorizontalStackBar(instance.container, instance.elRef.nativeElement)\r\n    componentRef.setInput('chart', groupedBarChart);\r\n  }\r\n\r\n}\r\n", "<div class=\"container\">\r\n    <ng-container #container></ng-container>\r\n</div>", "import { Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { AppState } from '../../../../core/store/state.interface';\r\nimport { pvAction } from '../../../../core/store/monitoring/monitoring.action';\r\n\r\n@Component({\r\n  selector: 'app-monitoring-layout',\r\n  templateUrl: './monitoring-layout.component.html',\r\n  styleUrl: './monitoring-layout.component.scss'\r\n})\r\nexport class MonitoringLayoutComponent implements OnInit {\r\n  \r\n  constructor(\r\n    private store: Store<AppState>\r\n  ){}\r\n\r\n  ngOnInit(): void {\r\n    this.store.dispatch(pvAction());\r\n  }\r\n\r\n}\r\n", "<div class=\"container\">\r\n    <div>\r\n        <app-usage-toolbar></app-usage-toolbar>\r\n    </div>\r\n    <div class=\"container-body\">\r\n        <app-usage-graph></app-usage-graph>\r\n    </div>\r\n</div>", "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AreaExamleComponent } from './components/area-examle/area-examle.component';\r\nimport { D3chartComponent } from './components/d3chart/d3chart.component';\r\nimport { MonitoringLayoutComponent } from './components/monitoring-layout/monitoring-layout.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: MonitoringLayoutComponent},\r\n  {path: 'area', component: AreaExamleComponent},\r\n  {path: 'bar', component: D3chartComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class MonitoringRoutingModule { }\r\n", "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sample-chart',\r\n  templateUrl: './sample-chart.component.html',\r\n  styleUrl: './sample-chart.component.scss'\r\n})\r\nexport class SampleChartComponent {\r\n\r\n}\r\n", "<div>\r\n    <h1>Area Chart</h1>\r\n    <app-area-examle></app-area-examle>\r\n</div>\r\n<div>\r\n    <h1>Bar Chart</h1>\r\n    <app-d3chart></app-d3chart>\r\n</div>", "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MonitoringRoutingModule } from './monitoring-routing.module';\r\nimport { AreaExamleComponent } from './components/area-examle/area-examle.component';\r\nimport { D3chartComponent } from './components/d3chart/d3chart.component';\r\nimport { SampleChartComponent } from './components/sample-chart/sample-chart.component';\r\nimport { MonitoringLayoutComponent } from './components/monitoring-layout/monitoring-layout.component';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { UsageToolbarComponent } from './components/monitoring-layout/usage-toolbar/usage-toolbar.component';\r\nimport { UsageGraphComponent } from './components/monitoring-layout/usage-graph/usage-graph.component';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { ChartComponent } from './components/chart/chart.component';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { ChartTooltipComponent } from './components/chart-tooltip/chart-tooltip.component';\r\nimport { MonthPickerComponent } from './components/month-picker/month-picker.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AreaExamleComponent,\r\n    D3chartComponent,\r\n    SampleChartComponent,\r\n    MonitoringLayoutComponent,\r\n    UsageToolbarComponent,\r\n    UsageGraphComponent,\r\n    ChartComponent,\r\n    ChartTooltipComponent,\r\n    MonthPickerComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MonitoringRoutingModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    MatButtonToggleModule\r\n  ]\r\n})\r\nexport class MonitoringModule { }\r\n"],
  "mappings": "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",
  "names": ["d", "extent", "extent", "url", "extent", "url", "extent"]
}
