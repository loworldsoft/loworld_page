{"version":3,"sources":["node_modules/nanoid/index.browser.js","Modules/editor/services/editor.service.ts","Modules/editor/classes/slide.class.ts","Modules/editor/classes/shape.class.ts","Modules/editor/components/organisms/filmstrip/filmstrip.component.ts","Modules/editor/components/organisms/filmstrip/filmstrip.component.html","Modules/editor/classes/tool.class.ts","Modules/editor/classes/preview.class.ts","Modules/editor/components/organisms/workspace/workspace.component.ts","Modules/editor/components/organisms/workspace/workspace.component.html","Modules/editor/components/pages/editor-page/editor-page.component.ts","Modules/editor/components/pages/editor-page/editor-page.component.html","Modules/editor/editor-routing.module.ts","Modules/editor/editor.module.ts"],"sourcesContent":["import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { IPosition } from \"../classes/tool.class\";\r\nimport { Preview } from \"../classes/preview.class\";\r\n\r\nexport interface IShapeData{\r\n    id: string;\r\n    position: IPosition;\r\n    path: string;\r\n    stroke: string;\r\n    fill: string;\r\n    transform: string;\r\n}\r\n\r\nexport interface ISlideData{\r\n    id: string;\r\n    value: IShapeData[];\r\n}\r\n/**도형들 데이터를 담아놓자. */\r\n@Injectable()\r\nexport class EditorService {\r\n    //저장된 도형의 데이터\r\n    slides: ISlideData[] = [\r\n        {\r\n            id: nanoid(),\r\n            value: [{//슬라이드 내의 도형들\r\n                id: 'id1',\r\n                position: {\r\n                    start: {\r\n                        x: 200,\r\n                        y: 100\r\n                    },\r\n                    end: {\r\n                        x: 300,\r\n                        y: 300\r\n                    }\r\n                },\r\n                path: 'M200,100 l100,0 l0,200 l-100,0 l0,-200z',\r\n                stroke: 'black',\r\n                fill: 'green',\r\n                transform: ''\r\n            },]\r\n        },\r\n        {\r\n            id: nanoid(),\r\n            value:  [{\r\n                id: 'id2',\r\n                position: {\r\n                    start: {\r\n                        x:150,\r\n                        y: 150\r\n                    },\r\n                    end: {\r\n                        x: 250,\r\n                        y: 250\r\n                    }\r\n                },\r\n                path: 'M200,200 m-50,0 a50,50,0,1,0,100,0 a50,50,0,1,0,-100,0',\r\n                stroke: 'black',\r\n                fill: 'green',\r\n                transform: ''\r\n            },]\r\n        }\r\n    ];\r\n\r\n    $slideId = new BehaviorSubject<string>(this.slides.first().id);//굳이 상태관리 할 필요는 없음. 이벤트만 필요.\r\n    currentSlideId = '';//현재 어떤 슬라이드를 보고 있는지.\r\n    selectedShapeId = '';\r\n    $changedShapeId = new BehaviorSubject<string>('');\r\n\r\n    findSlide(id: string){\r\n        return this.slides.find(d => d.id === id);\r\n    }\r\n\r\n    isRotating = false;\r\n\r\n    mousePosition: IPosition = {\r\n        start: {\r\n          x: 0,\r\n          y: 0\r\n        },\r\n        end: {\r\n          x: 0,\r\n          y: 0\r\n        }\r\n    }\r\n\r\n    marginLeft = 250;\r\n    marginTop = 64;\r\n    previewClass: Preview | null = null;\r\n}","import { EditorService } from \"../services/editor.service\";\r\nimport { Shape } from \"./shape.class\";\r\n\r\n//슬라이드에 생명주기를 달아놓자..!\r\nexport class Slide {\r\n    isClicked = false;\r\n    svg: any;\r\n    id: string = '';\r\n    background: any;\r\n    text: string = '';\r\n    shapes: Shape[] = [];\r\n    \r\n    constructor(private editorService: EditorService, data: {\r\n        svg: any,\r\n        id: string,\r\n        background: any,\r\n        text: any,\r\n    }) {\r\n        this.svg = data.svg;\r\n        this.id = data.id;\r\n        this.background = data.background;\r\n        this.text = data.text;\r\n        \r\n        //this.addClickEvent();\r\n\r\n        /**\r\n         * option1: 원래 내가 하던 방식대로 이벤트를 다 듣고 있다가 내 이벤트이면 샥 하고 바꾼다.\r\n         * option2: 상위에서 이벤트를 듣고 있다가 slide를 관리하는 배열에서 샥 한다.\r\n         */\r\n\r\n        // //지금 이 방식은 뭔가 이상함!!!!!!\r\n        // this.editorService.slideId.subscribe(d =>{\r\n        //     if(d !== this.id) {\r\n        //         this.unclickStyle();\r\n        //         return;\r\n        //     }\r\n        //     this.clickStyle();\r\n        // });\r\n    }\r\n\r\n    addHoverEvent() {\r\n\r\n    }\r\n\r\n    addClickEvent() {\r\n        this.svg.on('click', (event: PointerEvent)=>{//eventEmitter로 페이지 인덱스 보내기\r\n            this.editorService.$slideId.next(this.id);\r\n        });\r\n    }\r\n\r\n    removeClickEvent(){\r\n        this.svg.on('click', null);\r\n    }\r\n\r\n    removeBorder(){\r\n        this.background.attr('style', '');\r\n    }\r\n\r\n    addBorder(){\r\n        this.background.attr('style', 'stroke: rgb(11, 87, 208); stroke-width: 20px;');\r\n    }\r\n\r\n    show(){\r\n        this.svg.attr('class', 'editor-show');\r\n    }\r\n\r\n    hide(){\r\n        this.svg.attr('class', 'editor-hide');\r\n    }\r\n\r\n    destroy(){\r\n        \r\n    }\r\n}","import { EditorService } from \"../services/editor.service\";\r\n\r\nexport class Shape{\r\n    id: string;\r\n    path: any;\r\n    pagesDiv: any;\r\n\r\n    constructor(private editorService: EditorService, data: {\r\n        id: string,\r\n        path: any,\r\n        pagesDiv: any,\r\n    }){\r\n        this.id = data.id;\r\n        this.path = data.path;\r\n        this.pagesDiv = data.pagesDiv\r\n    }\r\n\r\n     //도형 이벤트\r\n  hoverShape(path: any){\r\n    path.on('mouseenter', ()=>{        \r\n      if(this.editorService.isRotating) return;//다른 작업이 진행중이면 마우스 포인터 바꾸지 마!\r\n      if(this.pagesDiv === null) return;\r\n      this.pagesDiv.attr('class', 'cursor-move');\r\n    });\r\n\r\n    path.on('mouseleave', ()=>{\r\n        console.log('여기를 봐!', this.pagesDiv);\r\n        \r\n      if(this.pagesDiv === null) return;\r\n      this.pagesDiv.attr('class', 'cursor-default');\r\n    });\r\n  }\r\n}","import { Component, ElementRef, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { GlobalService } from '../../../../core/services/global.service';\r\nimport * as d3 from 'd3';\r\nimport { EditorService } from '../../../services/editor.service';\r\nimport { Slide } from '../../../classes/slide.class';\r\nimport { Shape } from '../../../classes/shape.class';\r\n\r\n@Component({\r\n  selector: 'app-filmstrip',\r\n  templateUrl: './filmstrip.component.html',\r\n  styleUrl: './filmstrip.component.scss'\r\n})\r\nexport class FilmstripComponent implements OnInit {\r\n  @ViewChild('thumnails', { static: true }) thumnails!: ElementRef;// DOM 요소에 대한 참조\r\n  canvas: any;\r\n  height: string;\r\n  slides: Slide[] = [];//슬라이드 객체들 관리하기\r\n  previousId: number = 0;\r\n\r\n  constructor(globalService: GlobalService, private readonly editorService: EditorService) {\r\n    this.height = globalService.layoutService.getBodyHeight();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.canvas = d3.select(this.thumnails.nativeElement);\r\n    this.editorService.slides.forEach((slideData, index) => {\r\n      const slideClass = this.createSlide(slideData, index);\r\n      slideClass.addClickEvent();\r\n      this.slides.push(slideClass);\r\n      slideData.value.forEach(shapeData => {\r\n        const shapePath = slideClass.svg.append('g')\r\n          .attr('id', shapeData.id)\r\n          .append('path');\r\n        this.drawShape(shapePath, shapeData);\r\n        const shapeClass = new Shape(this.editorService, {id: shapeData.id, path: shapePath, pagesDiv: null});\r\n        slideClass.shapes.push(shapeClass);\r\n      });\r\n    });\r\n    \r\n    this.editorService.$slideId.subscribe(id =>{\r\n      console.log('slideId', id);\r\n      this.slides.forEach((slide) => {\r\n        if(id === slide.id){\r\n          slide.isClicked = true;\r\n          slide.addBorder();\r\n          console.log();\r\n          \r\n          return;\r\n        }\r\n        slide.removeBorder();\r\n        slide.isClicked = false;\r\n      });\r\n    });\r\n\r\n    this.editorService.$changedShapeId.subscribe(id => {\r\n      console.log('이벤트 들어옴!@');\r\n      \r\n      if(!id) return;\r\n      const shapeData = this.editorService.findSlide(this.editorService.currentSlideId)?.value.find(d => d.id === this.editorService.selectedShapeId);\r\n      if(!shapeData){\r\n        console.log('해당하는 도형이 없음');\r\n        return;\r\n      }\r\n      const slideClass = this.slides.find(d => d.id === this.editorService.currentSlideId);\r\n      console.log('찾은 클래스', slideClass);\r\n      if(!slideClass) return;\r\n\r\n      const shape = slideClass?.shapes.find(d => d.id === this.editorService.selectedShapeId);\r\n      console.log('찾은 도형', shape);\r\n    \r\n      this.drawShape(shape?.path, shapeData);\r\n    })\r\n  }\r\n\r\n  ///svg 돔 덩어리들을 컴포넌트들처럼 생명주기를 달고 관리할 수는 없을까???????????????????????????????????????????????\r\n  /**페이지 생성하기 */\r\n  createSlide(slideData: any, index: number):  Slide{\r\n    const slideGroup = this.canvas.append('g')\r\n      .attr('transform', `translate(0, ${2 + 102 * index})`);\r\n    const text = slideGroup.append('text')\r\n      .attr('x', 31)\r\n      .attr('y', 20)\r\n      .text(index + 1);\r\n    const svg = slideGroup.append('g')\r\n      .attr('transform', 'translate(46,9)')\r\n      .append('svg')\r\n      .attr('xmlns', 'http://www.w3.org/2000/svg')\r\n      .attr('xmlns:xlink', 'http://www.w3.org/1999/xlink')\r\n      .attr('width', 150)\r\n      .attr('height', 90)\r\n      .attr('viewBox', '0 0 800 400')\r\n      .attr('id', slideData.id)\r\n\r\n    const background = svg.append('rect')\r\n      .attr('fill', '#ffffff')\r\n      .attr('width', '100%')\r\n      .attr('height', '100%')\r\n      .attr('rx', 60)\r\n      .attr('ry', 60);\r\n    const slide = new Slide(this.editorService, {\r\n      svg: svg,\r\n      id: slideData.id,\r\n      background: background,\r\n      text: text,\r\n    });\r\n    return slide;\r\n    /**이벤트 어카지... 얘네들도 컴포넌트처럼 관리할 수는 없나...? */\r\n  }\r\n\r\n  drawShape(svg: any, shape: any){\r\n    svg.attr('d', shape.path)\r\n      .attr('stroke', shape.stroke)\r\n      .attr('fill', shape.fill)\r\n      .attr('transform', shape.transform);\r\n}\r\n\r\n}\r\n","<svg #thumnails xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"200\" style=\"height: calc(100% - 4px)\" >\r\n    <rect fill=\"#fff\" fill-opacity=\"0\" width=\"100%\" height=\"100%\"></rect>\r\n    <!--슬라이드 하나-->\r\n            <!-- <rect width=\"200\" height=\"100\" fill=\"none\"></rect> -->\r\n    <!-- <g transform=\"translate(0 2)\">\r\n        <text x=\"31\" y=\"20\">1</text>\r\n        <g transform=\"translate(46 9)\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"150\" height=\"90\"\r\n                viewBox=\"0 0 800 400\">\r\n                <rect fill=\"#1a73e8\" fill-opacity=\"1\" width=\"100%\" height=\"100%\"></rect>\r\n                <g id=\"id1\">\r\n                    <path d=\"M100, 100 l100, 0 l0, 200 l-100, 0 l0, -200z\" stroke=\"black\" fill=\"green\"></path>\r\n                </g>\r\n            </svg>\r\n        </g>\r\n    </g>\r\n\r\n    <g transform=\"translate(0 104)\">\r\n        <text x=\"31\" y=\"20\">2</text>\r\n        <g transform=\"translate(46 9)\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"150\" height=\"90\"\r\n                viewBox=\"0 0 800 400\">\r\n                <rect fill=\"#1a73e8\" fill-opacity=\"1\" width=\"100%\" height=\"100%\"></rect>\r\n                <g id=\"id2\">\r\n                    <path d=\"M200,200 m-50,0 a50,50,0,1,0,100,0 a50,50,0,1,0,-100,0\" stroke=\"black\" fill=\"green\"></path>\r\n                </g>\r\n            </svg>\r\n        </g>\r\n    </g> -->\r\n</svg>","export interface IPosition {\r\n    start: {\r\n        x: number;\r\n        y: number;\r\n    },\r\n    end: {\r\n        x: number;\r\n        y: number;\r\n    }\r\n}\r\n\r\nexport class Tool{\r\n    static dx(position: IPosition){\r\n        return position.end.x - position.start.x;\r\n    }\r\n\r\n    static dy(position: IPosition){\r\n        return position.end.y - position.start.y;\r\n    }\r\n\r\n    static center(position: IPosition){\r\n        return {\r\n            x: Math.min(position.start.x, position.end.x) + Math.abs(Tool.dx(position))/2,\r\n            y: Math.min(position.start.y, position.end.y) + Math.abs(Tool.dy(position))/2\r\n        }\r\n    }\r\n}","import { EditorService } from \"../services/editor.service\";\r\nimport { IPosition, Tool } from \"./tool.class\";\r\n\r\nexport class Preview{\r\n    preview: any;\r\n\r\n    group: any;\r\n    groupLine: any;\r\n    groupRotate: any;\r\n    groupDots: any;\r\n\r\n    //buttons\r\n    rotateButton: any;\r\n    shapePosition: IPosition;\r\n    constructor(private editorService: EditorService, data: {\r\n        preview: any;\r\n        group: any;\r\n        groupLine: any;\r\n        groupRotate: any;\r\n        groupDots: any;\r\n        rotateButton: any;\r\n        shapePosition: any;\r\n    }){\r\n        this.preview = data.preview;\r\n        this.group = data.group;\r\n        this.groupLine = data.groupLine;\r\n        this.groupRotate = data.groupRotate;\r\n        this.groupDots = data.groupDots;\r\n        this.rotateButton = data.rotateButton;\r\n        this.shapePosition = data.shapePosition;\r\n\r\n        this.addMousedownRotateButton();\r\n        this.addMouseenterRotateButton();\r\n        this.addMouseleaveRotateButton();\r\n        // this.addClickGroup();\r\n    }\r\n\r\n    addMousedownRotateButton(){\r\n        this.rotateButton.on('mousedown', (event: MouseEvent)=>{\r\n            console.log('click', event);\r\n            event.stopPropagation();\r\n            this.editorService.isRotating = true;\r\n            \r\n            const shapeId = this.editorService.selectedShapeId;\r\n            this.editorService.mousePosition.start = {\r\n              x: this.shapePosition.start.x + Tool.dx(this.shapePosition)/2,\r\n              y: event.y - this.editorService.marginTop //TODO filmstrip 크기 저장해놓기\r\n            };\r\n          });\r\n    }\r\n\r\n    // addClickGroup(){\r\n    //     this.group.on('mousedown', (event: MouseEvent)=>{\r\n    //         console.log('dddd');\r\n            \r\n    //         event.stopPropagation();\r\n    //     })\r\n    // }\r\n\r\n    removeMousedownRotateButton(){\r\n        this.rotateButton.on('mousedown', null);\r\n    }\r\n\r\n    addMouseenterRotateButton(){\r\n        this.rotateButton.on('mouseenter', ()=>{\r\n            console.log('enter enter');\r\n            \r\n            this.preview.attr('class', 'cursor-cross');\r\n          });\r\n    }\r\n\r\n    removeMouseenterRotateButton(){\r\n        this.rotateButton.on('mouseenter', null);\r\n    }\r\n\r\n    removePath(){\r\n\r\n    }\r\n\r\n    destroy(){\r\n        this.removeMousedownRotateButton();\r\n        this.removeMouseenterRotateButton();\r\n        this.preview.select('*').remove();\r\n        this.preview.attr('pointer-events', 'none');\r\n        this.preview = null;\r\n        this.group = null;\r\n        this.groupLine = null;\r\n        this.groupRotate = null;\r\n        this.groupDots = null;\r\n        this.rotateButton = null;\r\n    }\r\n\r\n    addMouseleaveRotateButton(){\r\n        this.rotateButton.on('mouseleave', ()=>{\r\n            console.log('leave leave');\r\n            \r\n            this.preview.attr('class', 'cursor-default');\r\n          });\r\n    }\r\n\r\n}","import { Component, ElementRef, HostListener, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { EditorService } from '../../../services/editor.service';\r\nimport * as d3 from 'd3';\r\nimport { Subscription } from 'rxjs';\r\nimport { Slide } from '../../../classes/slide.class';\r\nimport { IPosition, Tool } from '../../../classes/tool.class';\r\nimport { Preview } from '../../../classes/preview.class';\r\nimport { Shape } from '../../../classes/shape.class';\r\n\r\n@Component({\r\n  selector: 'app-workspace',\r\n  templateUrl: './workspace.component.html',\r\n  styleUrl: './workspace.component.scss'\r\n})\r\nexport class WorkspaceComponent implements OnInit, OnDestroy{\r\n  subscriptions: Subscription[] = [];\r\n  slides: Slide[] = [];//슬라이드 객체들 관리하기\r\n  //svg들\r\n  pagesDiv: any;\r\n  previewSvg: any;\r\n  selectedShape: any;\r\n  rotateValue: string = '';\r\n  //나중에 slide 객체 안에 해당하는 shapes 정보가 들어있으면 좋겠다.\r\n  \r\n  constructor(private readonly editorService: EditorService){}\r\n\r\n  ngOnInit(): void {\r\n    this.pagesDiv = d3.select('#pages');   \r\n    this.previewSvg = d3.select('#preview');\r\n    \r\n    //기존 존재하는 슬라이드 그리기.\r\n    this.editorService.slides.forEach((slideData, index) => {\r\n      const slideClass = this.createSlide(slideData, this.pagesDiv);\r\n      this.slides.push(slideClass);\r\n      //슬라이드 내 도형 그리기\r\n      slideData.value.forEach(shapeData => {\r\n        //g는 한 번만 생성돼야 하니 drawShape에서는 하지 않는다.(drawShape은 재활용 됨)\r\n        const shapePath = slideClass.svg.append('g')\r\n          .attr('id', shapeData.id)\r\n          .append('path');\r\n        this.drawShape(shapePath, shapeData);\r\n        const shapeClass = new Shape(this.editorService, {id: shapeData.id, path: shapePath, pagesDiv: this.pagesDiv});\r\n        slideClass.shapes.push(shapeClass);\r\n        shapeClass.hoverShape(shapeClass.path);\r\n        this.clickShape(shapeClass.path, shapeData);\r\n      })\r\n    });\r\n\r\n    //슬라이드 교체하기\r\n    const subscription1 = this.editorService.$slideId.subscribe(id =>{\r\n      console.log('id', id);\r\n      this.editorService.currentSlideId = id;\r\n      this.slides.forEach((slide) => {\r\n        if(id === slide.id){\r\n          slide.isClicked = true;\r\n          slide.show();          \r\n          return;\r\n        }\r\n        slide.hide();\r\n        slide.isClicked = false;\r\n      });\r\n    })\r\n    this.subscriptions.push(subscription1);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n      this.subscriptions.forEach(d =>{\r\n        d.unsubscribe();\r\n      });\r\n  }\r\n\r\n  //페이지 생성하기\r\n  createSlide(slideData: any, pages: any){\r\n    const svg = pages.append('svg')\r\n      .attr('xmlns', 'http://www.w3.org/2000/svg')\r\n      .attr('xmlns:xlink', 'http://www.w3.org/1999/xlink')\r\n      .attr('width', '100%')//100%로 하니 부모 크기에 따라 자연스럽게 줄어드네...?\r\n      .attr('height', '100%')\r\n      .attr('viewBox', '0 0 800 400')//뷰박스 덕분에!!!! 일정 크기를 유지시켜준다! 고마워!\r\n      .attr('style', 'position:absolute; top:0px; left:0px')//이건 나중에 클래스로 해도 된다.\r\n      .attr('id', slideData.id);\r\n\r\n    const background = svg.append('rect')\r\n      .attr('fill', '#ffffff')\r\n      .attr('width', '100%')\r\n      .attr('height', '100%')\r\n      // .attr('x', 0)\r\n      // .attr('y', 0);\r\n\r\n    const slide = new Slide(this.editorService, {\r\n      svg: svg,\r\n      id: slideData.id,\r\n      background: background,\r\n      text: 'slide1',\r\n    });\r\n    return slide;\r\n  }\r\n\r\n  //TODO 같은거 반복되는 중. 위에것도!\r\n  drawShape(svg: any, shape: any){\r\n      svg.attr('d', shape.path)\r\n        .attr('stroke', shape.stroke)\r\n        .attr('fill', shape.fill)\r\n        .attr('transform', shape.transform);\r\n  }\r\n\r\n  /**\r\n    * 클릭하면 outline이 preview에 생겨야 함.\r\n  */\r\n  clickShape(path: any, shapeData: any){\r\n    path.on('mousedown', (event: MouseEvent)=>{\r\n      console.log('야호야호');\r\n      \r\n      event.stopPropagation();\r\n      this.selectedShape = shapeData;\r\n      this.editorService.selectedShapeId = shapeData.id;\r\n      this.drawOutline(shapeData);\r\n    })\r\n  }\r\n\r\n  drawOutline(shapeData: any){\r\n    this.previewSvg.select('*').remove();\r\n    // this.preview.attr('pointer-events', 'visiblePainted');\r\n    const previewGroup = this.previewSvg.append('g')\r\n      .append('g');\r\n    previewGroup.attr('transform', this.rotateValue);\r\n    const groupLine = previewGroup.append('g')\r\n      .attr('pointer-events', 'visiblePainted');\r\n    const groupRotate = previewGroup.append('g')\r\n      .attr('pointer-events', 'visiblePainted');\r\n    const groupDots = previewGroup.append('g')\r\n      .attr('pointer-events', 'visiblePainted');\r\n    groupLine.append('path')\r\n      .attr('d', shapeData.path)\r\n      .attr('fill', 'none')\r\n      .attr('stroke', '#1a73e8')\r\n      .attr('stroke-width', 10);\r\n    console.log('shapeData', shapeData, shapeData.position.start.x + Tool.dx(shapeData.position)/2);\r\n    \r\n    const rotateButton = groupRotate.append('circle')\r\n      .attr('cx', shapeData.position.start.x + Tool.dx(shapeData.position)/2)\r\n      .attr('cy', Math.min(shapeData.position.start.y, shapeData.position.end.y) - 20)\r\n      .attr('r', 5)\r\n      .attr('fill', 'pink');\r\n\r\n      // console.log('rotateButton', rotateButton.node());\r\n    this.editorService.previewClass = new Preview(this.editorService, {\r\n      preview: this.previewSvg,\r\n      group: previewGroup,\r\n      groupLine: groupLine,\r\n      groupRotate: groupRotate,\r\n      groupDots: groupDots,\r\n      rotateButton: rotateButton,\r\n      shapePosition: this.selectedShape.position\r\n    });\r\n  }\r\n\r\n  //host element나 descendnts의 이벤트까지 잡아옴.\r\n  @HostListener('mousemove', ['$event'])\r\n  onMousemove(event: MouseEvent) {\r\n    if(!this.editorService.isRotating) return;\r\n    this.editorService.mousePosition.end = {\r\n      x: event.x - this.editorService.marginLeft,\r\n      y: event.y - this.editorService.marginTop\r\n    }\r\n    const angle = this.calculateAngle(this.editorService.mousePosition);\r\n    //console.log('angle', angle);\r\n    if(!this.editorService.previewClass) return;\r\n    this.rotateValue = `rotate(${angle} ${Tool.center(this.selectedShape.position).x} ${Tool.center(this.selectedShape.position).y})`;\r\n    this.editorService.previewClass.group.attr('transform', this.rotateValue);\r\n  }\r\n\r\n  @HostListener('mouseup', ['$event'])\r\n  onMouseUp(event: MouseEvent){\r\n    if(this.editorService.isRotating){\r\n      this.editorService.isRotating = false;\r\n      const shapeData = this.editorService.findSlide(this.editorService.currentSlideId)?.value.find(d => d.id === this.editorService.selectedShapeId);\r\n      if(!shapeData){\r\n        console.log('해당하는 도형이 없음');\r\n        return;\r\n      }\r\n      shapeData.transform = this.rotateValue;\r\n      const slideClass = this.slides.find(d => d.id === this.editorService.currentSlideId);\r\n      console.log('찾은 클래스', slideClass);\r\n      if(!slideClass) return;\r\n\r\n      const shape = slideClass?.shapes.find(d => d.id === this.editorService.selectedShapeId);\r\n      console.log('찾은 도형', shape);\r\n\r\n      this.drawShape(shape?.path, shapeData);\r\n      this.editorService.$changedShapeId.next(this.editorService.selectedShapeId);\r\n      return;\r\n    }\r\n\r\n  }\r\n\r\n  @HostListener('mousedown', ['$event'])\r\n  onMouseDown(event: MouseEvent){\r\n    \r\n  }\r\n\r\n  //TODO 계산이 제대로 안된다!!!\r\n  calculateAngle(mousePosition: IPosition){\r\n    const pointA = mousePosition.start;\r\n    const pointB = mousePosition.end;\r\n    const pointC = Tool.center(this.selectedShape.position);\r\n    const vectorAC = { x: pointC.x - pointA.x, y: pointC.y - pointA.y };\r\n    const vectorBC = { x: pointC.x - pointB.x, y: pointC.y - pointB.y };\r\n    //console.log('mousePosition', pointA, pointB, pointC);\r\n  \r\n    const angleRadians = Math.atan2(vectorBC.y, vectorBC.x) - Math.atan2(vectorAC.y, vectorAC.x);\r\n    let angleDegrees = angleRadians * (180 / Math.PI);\r\n\r\n    // Normalize the angle to be between 0 and 360 degrees\r\n    angleDegrees = (angleDegrees + 360) % 360;\r\n    console.log(angleDegrees, angleDegrees, pointA, pointB, pointC);\r\n    \r\n    return angleDegrees;\r\n  }\r\n\r\n}\r\n","<div style=\"height:100%; position: relative; background-color: rebeccapurple;\">\r\n    <!--페이지용 svg-->\r\n    <div id=\"pages\"></div>\r\n    <!--작업 내역 미리보기하는 svg. page svg 아래에 올라감.-->\r\n    <svg id=\"preview\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"100%\" height=\"100%\" viewBox=\"0 0 800 400\"\r\n        style=\"position:absolute; top:0px; left:0px\" pointer-events=\"none\"></svg>\r\n    <!--pointer-events=\"none\"을 하면 포인터가 없는 것처럼 여겨짐.-->\r\n</div>","import { Component, HostListener } from '@angular/core';\r\nimport { GlobalService } from '../../../../core/services/global.service';\r\nimport { EditorService } from '../../../services/editor.service';\r\n\r\n@Component({\r\n  selector: 'app-editor-page',\r\n  templateUrl: './editor-page.component.html',\r\n  styleUrl: './editor-page.component.scss'\r\n})\r\nexport class EditorPageComponent {\r\n  height: string;\r\n\r\n  constructor(globalService: GlobalService, private editorService: EditorService){\r\n    this.height = globalService.layoutService.getBodyHeight();\r\n  }\r\n\r\n  //다른 곳 누르면 outline 사라지게\r\n      //이벤트가 자식에서부터 올라오는데, 이벤트 명이 같아야 함!\r\n  @HostListener('mousedown', ['$event'])\r\n  onMouseDown(event: MouseEvent){\r\n    console.log('from page');\r\n    this.editorService.previewClass?.destroy();\r\n    this.editorService.previewClass = null;\r\n  }\r\n}\r\n","<div style=\"display:flex;\" [style.height]=\"height\">\r\n    <div style=\"flex-shrink: 0;\" [style.width.px]=\"250\" style=\"background-color: salmon\">\r\n        <app-filmstrip></app-filmstrip>\r\n    </div>\r\n    <div style=\"flex-grow: 1;\">\r\n        <app-workspace></app-workspace>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { EditorPageComponent } from './components/pages/editor-page/editor-page.component';\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: EditorPageComponent\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class EditorRoutingModule { }","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { EditorPageComponent } from './components/pages/editor-page/editor-page.component';\r\nimport { EditorRoutingModule } from './editor-routing.module';\r\nimport { FilmstripComponent } from './components/organisms/filmstrip/filmstrip.component';\r\nimport { WorkspaceComponent } from './components/organisms/workspace/workspace.component';\r\nimport { EditorService } from './services/editor.service';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    EditorPageComponent,\r\n    FilmstripComponent,\r\n    WorkspaceComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    EditorRoutingModule,\r\n  ],\r\n  exports: [\r\n  ],\r\n  providers:[\r\n    EditorService\r\n  ]\r\n})\r\nexport class EditorModule { }\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA,IAAI,SAAS,CAAC,OAAO,OACnB,OAAO,gBAAgB,IAAI,WAAW,IAAI,CAAC,EAAE,OAAO,CAAC,IAAI,SAAS;AAChE,UAAQ;AACR,MAAI,OAAO,IAAI;AACb,UAAM,KAAK,SAAS,EAAE;AAAA,EACxB,WAAW,OAAO,IAAI;AACpB,WAAO,OAAO,IAAI,SAAS,EAAE,EAAE,YAAY;AAAA,EAC7C,WAAW,OAAO,IAAI;AACpB,UAAM;AAAA,EACR,OAAO;AACL,UAAM;AAAA,EACR;AACA,SAAO;AACT,GAAG,EAAE;;;ACXD,IAAO,iBAAP,MAAO,eAAa;EAD1B,cAAA;AAGI,SAAA,SAAuB;MACnB;QACI,IAAI,OAAM;QACV,OAAO,CAAC;UACJ,IAAI;UACJ,UAAU;YACN,OAAO;cACH,GAAG;cACH,GAAG;;YAEP,KAAK;cACD,GAAG;cACH,GAAG;;;UAGX,MAAM;UACN,QAAQ;UACR,MAAM;UACN,WAAW;SACd;;MAEL;QACI,IAAI,OAAM;QACV,OAAQ,CAAC;UACL,IAAI;UACJ,UAAU;YACN,OAAO;cACH,GAAE;cACF,GAAG;;YAEP,KAAK;cACD,GAAG;cACH,GAAG;;;UAGX,MAAM;UACN,QAAQ;UACR,MAAM;UACN,WAAW;SACd;;;AAIT,SAAA,WAAW,IAAI,gBAAwB,KAAK,OAAO,MAAK,EAAG,EAAE;AAC7D,SAAA,iBAAiB;AACjB,SAAA,kBAAkB;AAClB,SAAA,kBAAkB,IAAI,gBAAwB,EAAE;AAMhD,SAAA,aAAa;AAEb,SAAA,gBAA2B;MACvB,OAAO;QACL,GAAG;QACH,GAAG;;MAEL,KAAK;QACH,GAAG;QACH,GAAG;;;AAIT,SAAA,aAAa;AACb,SAAA,YAAY;AACZ,SAAA,eAA+B;;EAnB/B,UAAU,IAAU;AAChB,WAAO,KAAK,OAAO,KAAK,OAAK,EAAE,OAAO,EAAE;EAC5C;;;mBApDS,gBAAa;AAAA;kFAAb,gBAAa,SAAb,eAAa,UAAA,CAAA;AAApB,IAAO,gBAAP;;;ACjBA,IAAO,QAAP,MAAY;EAQd,YAAoB,eAA8B,MAKjD;AALmB,SAAA,gBAAA;AAPpB,SAAA,YAAY;AAEZ,SAAA,KAAa;AAEb,SAAA,OAAe;AACf,SAAA,SAAkB,CAAA;AAQd,SAAK,MAAM,KAAK;AAChB,SAAK,KAAK,KAAK;AACf,SAAK,aAAa,KAAK;AACvB,SAAK,OAAO,KAAK;EAiBrB;EAEA,gBAAa;EAEb;EAEA,gBAAa;AACT,SAAK,IAAI,GAAG,SAAS,CAAC,UAAsB;AACxC,WAAK,cAAc,SAAS,KAAK,KAAK,EAAE;IAC5C,CAAC;EACL;EAEA,mBAAgB;AACZ,SAAK,IAAI,GAAG,SAAS,IAAI;EAC7B;EAEA,eAAY;AACR,SAAK,WAAW,KAAK,SAAS,EAAE;EACpC;EAEA,YAAS;AACL,SAAK,WAAW,KAAK,SAAS,+CAA+C;EACjF;EAEA,OAAI;AACA,SAAK,IAAI,KAAK,SAAS,aAAa;EACxC;EAEA,OAAI;AACA,SAAK,IAAI,KAAK,SAAS,aAAa;EACxC;EAEA,UAAO;EAEP;;;;ACtEE,IAAO,QAAP,MAAY;EAKd,YAAoB,eAA8B,MAIjD;AAJmB,SAAA,gBAAA;AAKhB,SAAK,KAAK,KAAK;AACf,SAAK,OAAO,KAAK;AACjB,SAAK,WAAW,KAAK;EACzB;;EAGF,WAAW,MAAS;AAClB,SAAK,GAAG,cAAc,MAAI;AACxB,UAAG,KAAK,cAAc;AAAY;AAClC,UAAG,KAAK,aAAa;AAAM;AAC3B,WAAK,SAAS,KAAK,SAAS,aAAa;IAC3C,CAAC;AAED,SAAK,GAAG,cAAc,MAAI;AACtB,cAAQ,IAAI,8BAAU,KAAK,QAAQ;AAErC,UAAG,KAAK,aAAa;AAAM;AAC3B,WAAK,SAAS,KAAK,SAAS,gBAAgB;IAC9C,CAAC;EACH;;;;;ACnBI,IAAO,sBAAP,MAAO,oBAAkB;EAO7B,YAAY,eAA+C,eAA4B;AAA5B,SAAA,gBAAA;AAH3D,SAAA,SAAkB,CAAA;AAClB,SAAA,aAAqB;AAGnB,SAAK,SAAS,cAAc,cAAc,cAAa;EACzD;EAEA,WAAQ;AACN,SAAK,SAAY,eAAO,KAAK,UAAU,aAAa;AACpD,SAAK,cAAc,OAAO,QAAQ,CAAC,WAAW,UAAS;AACrD,YAAM,aAAa,KAAK,YAAY,WAAW,KAAK;AACpD,iBAAW,cAAa;AACxB,WAAK,OAAO,KAAK,UAAU;AAC3B,gBAAU,MAAM,QAAQ,eAAY;AAClC,cAAM,YAAY,WAAW,IAAI,OAAO,GAAG,EACxC,KAAK,MAAM,UAAU,EAAE,EACvB,OAAO,MAAM;AAChB,aAAK,UAAU,WAAW,SAAS;AACnC,cAAM,aAAa,IAAI,MAAM,KAAK,eAAe,EAAC,IAAI,UAAU,IAAI,MAAM,WAAW,UAAU,KAAI,CAAC;AACpG,mBAAW,OAAO,KAAK,UAAU;MACnC,CAAC;IACH,CAAC;AAED,SAAK,cAAc,SAAS,UAAU,QAAK;AACzC,cAAQ,IAAI,WAAW,EAAE;AACzB,WAAK,OAAO,QAAQ,CAAC,UAAS;AAC5B,YAAG,OAAO,MAAM,IAAG;AACjB,gBAAM,YAAY;AAClB,gBAAM,UAAS;AACf,kBAAQ,IAAG;AAEX;;AAEF,cAAM,aAAY;AAClB,cAAM,YAAY;MACpB,CAAC;IACH,CAAC;AAED,SAAK,cAAc,gBAAgB,UAAU,QAAK;AAChD,cAAQ,IAAI,yCAAW;AAEvB,UAAG,CAAC;AAAI;AACR,YAAM,YAAY,KAAK,cAAc,UAAU,KAAK,cAAc,cAAc,GAAG,MAAM,KAAK,OAAK,EAAE,OAAO,KAAK,cAAc,eAAe;AAC9I,UAAG,CAAC,WAAU;AACZ,gBAAQ,IAAI,0DAAa;AACzB;;AAEF,YAAM,aAAa,KAAK,OAAO,KAAK,OAAK,EAAE,OAAO,KAAK,cAAc,cAAc;AACnF,cAAQ,IAAI,mCAAU,UAAU;AAChC,UAAG,CAAC;AAAY;AAEhB,YAAM,QAAQ,YAAY,OAAO,KAAK,OAAK,EAAE,OAAO,KAAK,cAAc,eAAe;AACtF,cAAQ,IAAI,6BAAS,KAAK;AAE1B,WAAK,UAAU,OAAO,MAAM,SAAS;IACvC,CAAC;EACH;;;EAIA,YAAY,WAAgB,OAAa;AACvC,UAAM,aAAa,KAAK,OAAO,OAAO,GAAG,EACtC,KAAK,aAAa,gBAAgB,IAAI,MAAM,KAAK,GAAG;AACvD,UAAM,OAAO,WAAW,OAAO,MAAM,EAClC,KAAK,KAAK,EAAE,EACZ,KAAK,KAAK,EAAE,EACZ,KAAK,QAAQ,CAAC;AACjB,UAAM,MAAM,WAAW,OAAO,GAAG,EAC9B,KAAK,aAAa,iBAAiB,EACnC,OAAO,KAAK,EACZ,KAAK,SAAS,4BAA4B,EAC1C,KAAK,eAAe,8BAA8B,EAClD,KAAK,SAAS,GAAG,EACjB,KAAK,UAAU,EAAE,EACjB,KAAK,WAAW,aAAa,EAC7B,KAAK,MAAM,UAAU,EAAE;AAE1B,UAAM,aAAa,IAAI,OAAO,MAAM,EACjC,KAAK,QAAQ,SAAS,EACtB,KAAK,SAAS,MAAM,EACpB,KAAK,UAAU,MAAM,EACrB,KAAK,MAAM,EAAE,EACb,KAAK,MAAM,EAAE;AAChB,UAAM,QAAQ,IAAI,MAAM,KAAK,eAAe;MAC1C;MACA,IAAI,UAAU;MACd;MACA;KACD;AACD,WAAO;EAET;EAEA,UAAU,KAAU,OAAU;AAC5B,QAAI,KAAK,KAAK,MAAM,IAAI,EACrB,KAAK,UAAU,MAAM,MAAM,EAC3B,KAAK,QAAQ,MAAM,IAAI,EACvB,KAAK,aAAa,MAAM,SAAS;EACxC;;;mBAtGa,qBAAkB,4BAAA,aAAA,GAAA,4BAAA,aAAA,CAAA;AAAA;oFAAlB,qBAAkB,WAAA,CAAA,CAAA,eAAA,CAAA,GAAA,WAAA,SAAA,yBAAA,IAAA,KAAA;AAAA,MAAA,KAAA,GAAA;;;;;;;;;ACZ/B,IAAA,yBAAA;AAAA,IAAA,yBAAA,GAAA,OAAA,GAAA,CAAA;AACI,IAAA,oBAAA,GAAA,QAAA,CAAA;AA4BJ,IAAA,uBAAA;;;ADjBM,IAAO,qBAAP;;6EAAO,oBAAkB,EAAA,WAAA,sBAAA,UAAA,6EAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AEDzB,IAAO,OAAP,MAAO,MAAI;EACb,OAAO,GAAG,UAAmB;AACzB,WAAO,SAAS,IAAI,IAAI,SAAS,MAAM;EAC3C;EAEA,OAAO,GAAG,UAAmB;AACzB,WAAO,SAAS,IAAI,IAAI,SAAS,MAAM;EAC3C;EAEA,OAAO,OAAO,UAAmB;AAC7B,WAAO;MACH,GAAG,KAAK,IAAI,SAAS,MAAM,GAAG,SAAS,IAAI,CAAC,IAAI,KAAK,IAAI,MAAK,GAAG,QAAQ,CAAC,IAAE;MAC5E,GAAG,KAAK,IAAI,SAAS,MAAM,GAAG,SAAS,IAAI,CAAC,IAAI,KAAK,IAAI,MAAK,GAAG,QAAQ,CAAC,IAAE;;EAEpF;;;;ACtBE,IAAO,UAAP,MAAc;EAWhB,YAAoB,eAA8B,MAQjD;AARmB,SAAA,gBAAA;AAShB,SAAK,UAAU,KAAK;AACpB,SAAK,QAAQ,KAAK;AAClB,SAAK,YAAY,KAAK;AACtB,SAAK,cAAc,KAAK;AACxB,SAAK,YAAY,KAAK;AACtB,SAAK,eAAe,KAAK;AACzB,SAAK,gBAAgB,KAAK;AAE1B,SAAK,yBAAwB;AAC7B,SAAK,0BAAyB;AAC9B,SAAK,0BAAyB;EAElC;EAEA,2BAAwB;AACpB,SAAK,aAAa,GAAG,aAAa,CAAC,UAAoB;AACnD,cAAQ,IAAI,SAAS,KAAK;AAC1B,YAAM,gBAAe;AACrB,WAAK,cAAc,aAAa;AAEhC,YAAM,UAAU,KAAK,cAAc;AACnC,WAAK,cAAc,cAAc,QAAQ;QACvC,GAAG,KAAK,cAAc,MAAM,IAAI,KAAK,GAAG,KAAK,aAAa,IAAE;QAC5D,GAAG,MAAM,IAAI,KAAK,cAAc;;;IAEpC,CAAC;EACP;;;;;;;EAUA,8BAA2B;AACvB,SAAK,aAAa,GAAG,aAAa,IAAI;EAC1C;EAEA,4BAAyB;AACrB,SAAK,aAAa,GAAG,cAAc,MAAI;AACnC,cAAQ,IAAI,aAAa;AAEzB,WAAK,QAAQ,KAAK,SAAS,cAAc;IAC3C,CAAC;EACP;EAEA,+BAA4B;AACxB,SAAK,aAAa,GAAG,cAAc,IAAI;EAC3C;EAEA,aAAU;EAEV;EAEA,UAAO;AACH,SAAK,4BAA2B;AAChC,SAAK,6BAA4B;AACjC,SAAK,QAAQ,OAAO,GAAG,EAAE,OAAM;AAC/B,SAAK,QAAQ,KAAK,kBAAkB,MAAM;AAC1C,SAAK,UAAU;AACf,SAAK,QAAQ;AACb,SAAK,YAAY;AACjB,SAAK,cAAc;AACnB,SAAK,YAAY;AACjB,SAAK,eAAe;EACxB;EAEA,4BAAyB;AACrB,SAAK,aAAa,GAAG,cAAc,MAAI;AACnC,cAAQ,IAAI,aAAa;AAEzB,WAAK,QAAQ,KAAK,SAAS,gBAAgB;IAC7C,CAAC;EACP;;;;ACpFE,IAAO,sBAAP,MAAO,oBAAkB;;EAU7B,YAA6B,eAA4B;AAA5B,SAAA,gBAAA;AAT7B,SAAA,gBAAgC,CAAA;AAChC,SAAA,SAAkB,CAAA;AAKlB,SAAA,cAAsB;EAGqC;EAE3D,WAAQ;AACN,SAAK,WAAc,eAAO,QAAQ;AAClC,SAAK,aAAgB,eAAO,UAAU;AAGtC,SAAK,cAAc,OAAO,QAAQ,CAAC,WAAW,UAAS;AACrD,YAAM,aAAa,KAAK,YAAY,WAAW,KAAK,QAAQ;AAC5D,WAAK,OAAO,KAAK,UAAU;AAE3B,gBAAU,MAAM,QAAQ,eAAY;AAElC,cAAM,YAAY,WAAW,IAAI,OAAO,GAAG,EACxC,KAAK,MAAM,UAAU,EAAE,EACvB,OAAO,MAAM;AAChB,aAAK,UAAU,WAAW,SAAS;AACnC,cAAM,aAAa,IAAI,MAAM,KAAK,eAAe,EAAC,IAAI,UAAU,IAAI,MAAM,WAAW,UAAU,KAAK,SAAQ,CAAC;AAC7G,mBAAW,OAAO,KAAK,UAAU;AACjC,mBAAW,WAAW,WAAW,IAAI;AACrC,aAAK,WAAW,WAAW,MAAM,SAAS;MAC5C,CAAC;IACH,CAAC;AAGD,UAAM,gBAAgB,KAAK,cAAc,SAAS,UAAU,QAAK;AAC/D,cAAQ,IAAI,MAAM,EAAE;AACpB,WAAK,cAAc,iBAAiB;AACpC,WAAK,OAAO,QAAQ,CAAC,UAAS;AAC5B,YAAG,OAAO,MAAM,IAAG;AACjB,gBAAM,YAAY;AAClB,gBAAM,KAAI;AACV;;AAEF,cAAM,KAAI;AACV,cAAM,YAAY;MACpB,CAAC;IACH,CAAC;AACD,SAAK,cAAc,KAAK,aAAa;EACvC;EAEA,cAAW;AACP,SAAK,cAAc,QAAQ,OAAI;AAC7B,QAAE,YAAW;IACf,CAAC;EACL;;EAGA,YAAY,WAAgB,OAAU;AACpC,UAAM,MAAM,MAAM,OAAO,KAAK,EAC3B,KAAK,SAAS,4BAA4B,EAC1C,KAAK,eAAe,8BAA8B,EAClD,KAAK,SAAS,MAAM,EACpB,KAAK,UAAU,MAAM,EACrB,KAAK,WAAW,aAAa,EAC7B,KAAK,SAAS,sCAAsC,EACpD,KAAK,MAAM,UAAU,EAAE;AAE1B,UAAM,aAAa,IAAI,OAAO,MAAM,EACjC,KAAK,QAAQ,SAAS,EACtB,KAAK,SAAS,MAAM,EACpB,KAAK,UAAU,MAAM;AAIxB,UAAM,QAAQ,IAAI,MAAM,KAAK,eAAe;MAC1C;MACA,IAAI,UAAU;MACd;MACA,MAAM;KACP;AACD,WAAO;EACT;;EAGA,UAAU,KAAU,OAAU;AAC1B,QAAI,KAAK,KAAK,MAAM,IAAI,EACrB,KAAK,UAAU,MAAM,MAAM,EAC3B,KAAK,QAAQ,MAAM,IAAI,EACvB,KAAK,aAAa,MAAM,SAAS;EACxC;;;;EAKA,WAAW,MAAW,WAAc;AAClC,SAAK,GAAG,aAAa,CAAC,UAAoB;AACxC,cAAQ,IAAI,0BAAM;AAElB,YAAM,gBAAe;AACrB,WAAK,gBAAgB;AACrB,WAAK,cAAc,kBAAkB,UAAU;AAC/C,WAAK,YAAY,SAAS;IAC5B,CAAC;EACH;EAEA,YAAY,WAAc;AACxB,SAAK,WAAW,OAAO,GAAG,EAAE,OAAM;AAElC,UAAM,eAAe,KAAK,WAAW,OAAO,GAAG,EAC5C,OAAO,GAAG;AACb,iBAAa,KAAK,aAAa,KAAK,WAAW;AAC/C,UAAM,YAAY,aAAa,OAAO,GAAG,EACtC,KAAK,kBAAkB,gBAAgB;AAC1C,UAAM,cAAc,aAAa,OAAO,GAAG,EACxC,KAAK,kBAAkB,gBAAgB;AAC1C,UAAM,YAAY,aAAa,OAAO,GAAG,EACtC,KAAK,kBAAkB,gBAAgB;AAC1C,cAAU,OAAO,MAAM,EACpB,KAAK,KAAK,UAAU,IAAI,EACxB,KAAK,QAAQ,MAAM,EACnB,KAAK,UAAU,SAAS,EACxB,KAAK,gBAAgB,EAAE;AAC1B,YAAQ,IAAI,aAAa,WAAW,UAAU,SAAS,MAAM,IAAI,KAAK,GAAG,UAAU,QAAQ,IAAE,CAAC;AAE9F,UAAM,eAAe,YAAY,OAAO,QAAQ,EAC7C,KAAK,MAAM,UAAU,SAAS,MAAM,IAAI,KAAK,GAAG,UAAU,QAAQ,IAAE,CAAC,EACrE,KAAK,MAAM,KAAK,IAAI,UAAU,SAAS,MAAM,GAAG,UAAU,SAAS,IAAI,CAAC,IAAI,EAAE,EAC9E,KAAK,KAAK,CAAC,EACX,KAAK,QAAQ,MAAM;AAGtB,SAAK,cAAc,eAAe,IAAI,QAAQ,KAAK,eAAe;MAChE,SAAS,KAAK;MACd,OAAO;MACP;MACA;MACA;MACA;MACA,eAAe,KAAK,cAAc;KACnC;EACH;;EAIA,YAAY,OAAiB;AAC3B,QAAG,CAAC,KAAK,cAAc;AAAY;AACnC,SAAK,cAAc,cAAc,MAAM;MACrC,GAAG,MAAM,IAAI,KAAK,cAAc;MAChC,GAAG,MAAM,IAAI,KAAK,cAAc;;AAElC,UAAM,QAAQ,KAAK,eAAe,KAAK,cAAc,aAAa;AAElE,QAAG,CAAC,KAAK,cAAc;AAAc;AACrC,SAAK,cAAc,UAAU,KAAK,IAAI,KAAK,OAAO,KAAK,cAAc,QAAQ,EAAE,CAAC,IAAI,KAAK,OAAO,KAAK,cAAc,QAAQ,EAAE,CAAC;AAC9H,SAAK,cAAc,aAAa,MAAM,KAAK,aAAa,KAAK,WAAW;EAC1E;EAGA,UAAU,OAAiB;AACzB,QAAG,KAAK,cAAc,YAAW;AAC/B,WAAK,cAAc,aAAa;AAChC,YAAM,YAAY,KAAK,cAAc,UAAU,KAAK,cAAc,cAAc,GAAG,MAAM,KAAK,OAAK,EAAE,OAAO,KAAK,cAAc,eAAe;AAC9I,UAAG,CAAC,WAAU;AACZ,gBAAQ,IAAI,0DAAa;AACzB;;AAEF,gBAAU,YAAY,KAAK;AAC3B,YAAM,aAAa,KAAK,OAAO,KAAK,OAAK,EAAE,OAAO,KAAK,cAAc,cAAc;AACnF,cAAQ,IAAI,mCAAU,UAAU;AAChC,UAAG,CAAC;AAAY;AAEhB,YAAM,QAAQ,YAAY,OAAO,KAAK,OAAK,EAAE,OAAO,KAAK,cAAc,eAAe;AACtF,cAAQ,IAAI,6BAAS,KAAK;AAE1B,WAAK,UAAU,OAAO,MAAM,SAAS;AACrC,WAAK,cAAc,gBAAgB,KAAK,KAAK,cAAc,eAAe;AAC1E;;EAGJ;EAGA,YAAY,OAAiB;EAE7B;;EAGA,eAAe,eAAwB;AACrC,UAAM,SAAS,cAAc;AAC7B,UAAM,SAAS,cAAc;AAC7B,UAAM,SAAS,KAAK,OAAO,KAAK,cAAc,QAAQ;AACtD,UAAM,WAAW,EAAE,GAAG,OAAO,IAAI,OAAO,GAAG,GAAG,OAAO,IAAI,OAAO,EAAC;AACjE,UAAM,WAAW,EAAE,GAAG,OAAO,IAAI,OAAO,GAAG,GAAG,OAAO,IAAI,OAAO,EAAC;AAGjE,UAAM,eAAe,KAAK,MAAM,SAAS,GAAG,SAAS,CAAC,IAAI,KAAK,MAAM,SAAS,GAAG,SAAS,CAAC;AAC3F,QAAI,eAAe,gBAAgB,MAAM,KAAK;AAG9C,oBAAgB,eAAe,OAAO;AACtC,YAAQ,IAAI,cAAc,cAAc,QAAQ,QAAQ,MAAM;AAE9D,WAAO;EACT;;;mBA5MW,qBAAkB,4BAAA,aAAA,CAAA;AAAA;oFAAlB,qBAAkB,WAAA,CAAA,CAAA,eAAA,CAAA,GAAA,cAAA,SAAA,gCAAA,IAAA,KAAA;AAAA,MAAA,KAAA,GAAA;;aAAlB,IAAA,YAAA,MAAA;IAAmB,CAAA,EAAA,WAAA,SAAA,8CAAA,QAAA;AAAA,aAAnB,IAAA,UAAA,MAAA;IAAiB,CAAA,EAAA,aAAA,SAAA,gDAAA,QAAA;AAAA,aAAjB,IAAA,YAAA,MAAA;IAAmB,CAAA;;;;ACdhC,IAAA,yBAAA,GAAA,OAAA,CAAA;AAEI,IAAA,oBAAA,GAAA,OAAA,CAAA;AAEA,IAAA,yBAAA;AAAA,IAAA,oBAAA,GAAA,OAAA,CAAA;AAGJ,IAAA,uBAAA;;;ADOM,IAAO,qBAAP;;6EAAO,oBAAkB,EAAA,WAAA,sBAAA,UAAA,6EAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AELzB,IAAO,uBAAP,MAAO,qBAAmB;EAG9B,YAAY,eAAsC,eAA4B;AAA5B,SAAA,gBAAA;AAChD,SAAK,SAAS,cAAc,cAAc,cAAa;EACzD;;;EAKA,YAAY,OAAiB;AAC3B,YAAQ,IAAI,WAAW;AACvB,SAAK,cAAc,cAAc,QAAO;AACxC,SAAK,cAAc,eAAe;EACpC;;;mBAdW,sBAAmB,4BAAA,aAAA,GAAA,4BAAA,aAAA,CAAA;AAAA;qFAAnB,sBAAmB,WAAA,CAAA,CAAA,iBAAA,CAAA,GAAA,cAAA,SAAA,iCAAA,IAAA,KAAA;AAAA,MAAA,KAAA,GAAA;;aAAnB,IAAA,YAAA,MAAA;IAAmB,CAAA;;;;ACThC,IAAA,yBAAA,GAAA,OAAA,CAAA,EAAmD,GAAA,OAAA,CAAA;AAE3C,IAAA,oBAAA,GAAA,eAAA;AACJ,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,OAAA,CAAA;AACI,IAAA,oBAAA,GAAA,eAAA;AACJ,IAAA,uBAAA,EAAM;;;AANiB,IAAA,sBAAA,UAAA,IAAA,MAAA;AACM,IAAA,oBAAA;AAAA,IAAA,sBAAA,SAAA,KAAA,IAAA;;;ADQ3B,IAAO,sBAAP;;6EAAO,qBAAmB,EAAA,WAAA,uBAAA,UAAA,6EAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AELzB,IAAM,SAAiB;EAC5B;IACE,MAAM;IACN,WAAW;;;AAQT,IAAO,uBAAP,MAAO,qBAAmB;;;mBAAnB,sBAAmB;AAAA;oFAAnB,qBAAmB,CAAA;wFAHpB,aAAa,SAAS,MAAM,GAC5B,YAAY,EAAA,CAAA;AAElB,IAAO,sBAAP;;;ACWA,IAAO,gBAAP,MAAO,cAAY;;;mBAAZ,eAAY;AAAA;6EAAZ,cAAY,CAAA;kFAJb;EACR;GACD,SAAA;EAPC;EACA;AAAmB,EAAA,CAAA;AAQjB,IAAO,eAAP;","names":[],"x_google_ignoreList":[0]}