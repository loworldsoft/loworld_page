{
  "version": 3,
  "sources": ["Modules/pages/sketchflow/classes/layout.action.ts", "Modules/pages/sketchflow/classes/sketchflow.layout.action.ts", "Modules/pages/sketchflow/classes/data/sketchflow.component.const.ts", "Modules/pages/sketchflow/components/box/box.component.ts", "Modules/pages/sketchflow/components/box/box.component.html", "Modules/pages/sketchflow/classes/data/sketchflow.action.const.ts", "Modules/pages/sketchflow/components/row-input/row-input.component.ts", "Modules/pages/sketchflow/components/row-input/row-input.component.html", "Modules/pages/sketchflow/components/row/row.component.ts", "Modules/pages/sketchflow/components/row/row.component.html", "Modules/pages/sketchflow/components/row-detail/row-detail.component.ts", "Modules/pages/sketchflow/components/row-detail/row-detail.component.html", "Modules/pages/sketchflow/sketchflow.component.ts", "Modules/pages/sketchflow/sketchflow.component.html", "Modules/pages/sketchflow/sketchflow-routing.module.ts", "Modules/pages/sketchflow/sketchflow.module.ts"],
  "sourcesContent": ["import { inject } from \"@angular/core\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { SelectButtonDialogComponent } from \"../../../shared/components/molecules/select-button-dialog/select-button-dialog.component\";\nimport { MatBottomSheet } from \"@angular/material/bottom-sheet\";\nimport { BottomSheetComponent } from \"../../../shared/components/molecules/bottom-sheet/bottom-sheet.component\";\nimport { LogicSketchflowService } from \"../../../core/services/logic-sketchflow.service\";\nimport { TextComponent } from \"../../chatflow/components/atom/text/text.component\";\nimport { FactoryService } from \"../../../core/services/factory.service\";\n\nexport interface ILayoutAction {\n  modalLayout(): void;\n  bottomSheetLayout(): void;\n  sidenavLeftLayout(): void;\n  sidenavRightLayout(): void;\n}\n\n\nexport abstract class LayoutAction implements ILayoutAction {\n\n  protected readonly dialog = inject(MatDialog);\n  protected readonly bottomSheet = inject(MatBottomSheet);\n  private readonly logicSketchflowService = inject(LogicSketchflowService);\n  private readonly factoryService = inject(FactoryService);\n\n  public modalLayout() {\n    const dialogRef = this.dialog.open(SelectButtonDialogComponent, {\n      data: {\n        title: 'Modal Layout will pop up like this.',\n        content: '',\n        items: [],\n        btnNo: '닫기'\n      }\n    });\n  }\n\n  public bottomSheetLayout() {\n    this.bottomSheet.open(BottomSheetComponent, {\n      data: {\n        title: 'Bottom Sheet will pop up like this.',\n        content: `Bottom Sheet Content --- Bottom Sheet Content --- Bottom Sheet Content`\n      }\n    });\n  }\n\n  public sidenavLeftLayout() {\n    // <app-row-detail></app-row-detail>\n    /**\n     * this.logicSketchflowService.rowDetailContainer가 null이 아니면, \n     * \n     */\n    this.logicSketchflowService.rowDetailContainer.clear();\n    this.logicSketchflowService.rowInputComponent = null;\n    this.factoryService.createComponent(\n      TextComponent,\n      this.logicSketchflowService.rowDetailContainer,\n      {\n        text: 'Sidenav Left will pop up like this.',\n        position: {\n          x: 10,\n          y: 10\n        },\n        font: {\n          weight: 100,\n          size: 'large'\n        }\n      }\n    );\n    this.logicSketchflowService.sketchflowDrawerPosition = 'start';\n    this.logicSketchflowService.sketchflowDrawer.toggle();\n\n  }\n\n  public sidenavRightLayout() {\n    this.logicSketchflowService.rowDetailContainer.clear();\n    this.logicSketchflowService.rowInputComponent = null;\n    this.factoryService.createComponent(\n      TextComponent,\n      this.logicSketchflowService.rowDetailContainer,\n      {\n        text: 'Sidenav Right will pop up like this.',\n        position: {\n          x: 10,\n          y: 10\n        },\n        font: {\n          weight: 100,\n          size: 'large'\n        }\n      }\n    );\n    this.logicSketchflowService.sketchflowDrawerPosition = 'end';\n    this.logicSketchflowService.sketchflowDrawer.toggle();\n  }\n\n}", "import { LayoutAction } from \"./layout.action\";\n\nexport class SketchflowLayoutAction extends LayoutAction {}", "\nexport interface ISketchflowLayoutComponent {\n  key: string;\n  value: {\n    name: string;\n    data: any | null;\n  }\n}\n\nexport class SketchflowLayoutComponentConst {\n\n  public components: ISketchflowLayoutComponent[] = [\n    {\n      key: 'input',\n      value: {\n        name: '입력',\n        data: null\n      }\n    },\n    {\n      key: 'button',\n      value: {\n        name: '버튼',\n        data: [\n          {\n            itemName: '',\n            icon: '',\n            color: '',\n            scale: ''\n          }\n        ]\n      }\n    },\n    {\n      key: 'text',\n      value: {\n        name: '글',\n        data: ''\n      }\n    },\n  ]\n\n  public isContain(key: string): boolean { \n    return this.components.some(layout => layout.key === key);\n  }\n\n}", "import { Component, Input, OnDestroy, OnInit, inject } from '@angular/core';\nimport { DataAbstract } from '../../../../core/classes/data.abstract';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { RowInputComponent } from '../row-input/row-input.component';\nimport { IValue } from '../../classes/data/sketchflow.data';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SelectButtonDialogComponent } from '../../../../shared/components/molecules/select-button-dialog/select-button-dialog.component';\nimport { SketchflowLayoutActionConst } from '../../classes/data/sketchflow.action.const';\nimport { SketchflowLayoutAction } from '../../classes/sketchflow.layout.action';\nimport { SketchflowLayoutComponentConst } from '../../classes/data/sketchflow.component.const';\n\n@Component({\n  selector: 'app-box',\n  templateUrl: './box.component.html',\n  styleUrl: './box.component.scss'\n})\nexport class BoxComponent extends DataAbstract implements OnInit, OnDestroy {\n\n  protected readonly dialog = inject(MatDialog);\n\n  @Input() parentId!: string; \n\n  private readonly router = inject(Router);\n  private readonly route = inject(ActivatedRoute);\n  \n  // 컴포넌트 이름\n  public id: string = '';\n  public type: string = 'box';\n  public name: string = '';\n  public value: string = '';\n\n  // 위치 속성\n  public width!: string;\n  public height!: string;\n  public x!: number;\n  public y!: number;\n\n  // 레이아웃 col\n  public colSpan!: number;\n  \n  public path: string | null = null;\n\n  private maxWidth!: number;\n  private maxHeight!: number;\n  public isSelected: boolean = false;\n\n  // public layoutActionConst = new SketchflowLayoutActionConst();\n  public sketchflowLayoutAction = new SketchflowLayoutAction();\n  public layoutComponentConst = new SketchflowLayoutComponentConst();\n\n  public override dataInit(): void {\n     if (this.data.id) this.id = this.data.id;\n     if (this.data.type) this.type = this.data.type;\n     if (this.data.name) this.name = this.data.name;\n     if (this.data.value) this.value = this.data.value;\n \n     if (this.data?.size?.width) {\n      this.width = this.data.size.width;\n      this.maxWidth = this.layoutService.convertStringToNumber(this.data.size.width); // box의 최대 width, height 정의\n     }\n     if (this.data?.size?.height) {\n      this.height = this.data.size.height;\n      this.maxHeight = this.layoutService.convertStringToNumber(this.data.size.height); // box의 최대 width, height 정의\n     }\n     if (this.data?.position?.x) this.x = this.data.position.x;\n     if (this.data?.position?.y) this.y = this.data.position.y;\n \n     if (this.data?.cell?.colSpan) this.colSpan = this.data.cell.colSpan;\n     if (this.data.path) this.path = this.data.path;\n  }\n\n  ngOnInit(): void {\n    console.log('box component OnInit');\n    this.route.queryParams.subscribe(params => {\n      const selectedId = params['boxId'];\n      this.isSelected = false;\n      if (this.id === selectedId) this.isSelected = true;\n    });\n  }\n\n  public onClickBox(event: MouseEvent) {\n    event.stopPropagation();\n    console.log('click box');\n\n    this.router.navigate([`/sketchflow/${this.logicSketchflowService.currentPage}`], {\n      queryParams: {\n        rowId: this.parentId,\n        boxId: this.id,\n      }\n     });\n    \n    // 모달 띄워서 box 선택 시, 어떤 걸 할지?\n    // 디테일 변경, 컴포넌트 액션 (라우터 이동, 해당 컴포넌트 레이아웃 변경)\n    const dialogRef = this.dialog.open(SelectButtonDialogComponent, {\n      data: {\n        title: 'Select your next step',\n        content: '',\n        items: ['Change Detail', 'Component Action'],\n        btnNo: '닫기'\n      }\n    })\n\n    dialogRef.afterClosed().subscribe(d => {\n      if (d == null || d.close === false) {\n        return;\n      }\n\n      if (d.data === 'Change Detail') {\n        this.logicSketchflowService.sketchflowDrawerPosition = 'end';\n         this.logicSketchflowService.sketchflowDrawer.toggle();\n         const boxData: IValue = {\n           id: this.id,\n           type: this.type as 'box',\n           name: this.name,\n           value: this.value,\n           size: {\n             width: this.width,\n             height: this.height\n           },\n           position: {\n             x: this.x,\n             y: this.y,\n           },\n           cell: {\n             colSpan: this.colSpan\n           },\n           path: '',\n           boxs: []\n         }\n\n        if (this.logicSketchflowService.rowInputComponent == null) {\n          this.logicSketchflowService.rowDetailContainer.clear();\n          this.logicSketchflowService.rowInputComponent = this.factoryService.createComponent(\n            RowInputComponent,\n            this.logicSketchflowService.rowDetailContainer,\n            boxData\n          );\n        }\n\n        this.logicSketchflowService.rowInputComponent.instance.data = boxData;\n        return;\n      }\n\n      if (d.data === 'Component Action') {\n        if (this.path == null && this.name === '') {\n          return;\n        }\n\n        switch (this.name) {\n          case 'page':\n            this.router.navigateByUrl(`/sketchflow/${this.path}`);\n            break;\n          // 컴포넌트 레이아웃 액션 발생\n          case 'modal':\n            this.sketchflowLayoutAction.modalLayout();\n            break;\n          case 'bottomSheet':\n            this.sketchflowLayoutAction.bottomSheetLayout();\n            break;\n          case 'sidenav-left':\n            // 왼쪽 사이드 네브\n            this.sketchflowLayoutAction.sidenavLeftLayout();\n            break;\n          case 'sidenav-right':\n            // 오른쪽 사이드 네브\n            this.sketchflowLayoutAction.sidenavRightLayout();\n            break;\n        }\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    console.log('box component OnDestroy');\n  }\n\n  public stringify(obj: any) {\n    return JSON.stringify(obj, null, 2);\n  }\n  \n}\n", "<div \n  [id]=\"id\"\n  class=\"outer-box\"\n  [style.width]=\"width\"\n  [style.height]=\"height\"\n  [style.padding-left.px]=\"x\"\n  [style.padding-top.px]=\"y\"\n  (click)=\"onClickBox($event)\"\n>\n  <div\n    class=\"inner-box\"\n    [ngClass]=\"{ 'selected' : isSelected, 'base': !isSelected }\"\n  >\n    name: {{ name }}\n    <br/>\n    @if (name === 'page') {\n      path: {{ '/' + path }}\n    }\n    @if (value && layoutComponentConst.isContain(name)) {\n      value: {{ value }}\n    }\n  </div>\n</div>", "\nexport interface ISketchflowLayout {\n  key: string;\n  value: {\n    name: string;\n  }\n}\n\nexport class SketchflowLayoutActionConst {\n  \n  public actions: ISketchflowLayout[] = [\n    {\n      key: 'modal',\n      value: {\n        name: '모달'\n      }\n    },\n    {\n      key: 'bottomSheet',\n      value: {\n        name: '바텀 시트'\n      }\n    },\n    {\n      key: 'sidenav-left',\n      value: {\n        name: '사이드 왼쪽'\n      }\n    },\n    {\n      key: 'sidenav-right',\n      value: {\n        name: '사이드 오른쪽'\n      }\n    },\n    {\n      key: 'page',\n      value: {\n        name: '페이지'\n      }\n    }\n  ]\n\n  public isContain(key: string): boolean {\n    return this.actions.some(layout => layout.key === key);\n  }\n\n}", "import { Component, ComponentRef, OnInit, inject } from '@angular/core';\nimport { DataAbstract } from '../../../../core/classes/data.abstract';\nimport { IValue } from '../../classes/data/sketchflow.data';\nimport { BoxComponent } from '../box/box.component';\nimport { ActivatedRoute } from '@angular/router';\nimport { SketchflowLayoutActionConst } from '../../classes/data/sketchflow.action.const';\nimport { SketchflowLayoutComponentConst } from '../../classes/data/sketchflow.component.const';\n\n@Component({\n  selector: 'app-row-input',\n  templateUrl: './row-input.component.html',\n  styleUrl: './row-input.component.scss'\n})\nexport class RowInputComponent extends DataAbstract implements OnInit {\n\n  private readonly route = inject(ActivatedRoute);\n  \n   // 컴포넌트 이름 & 속성\n   public id: string = '';\n   public type: string = '';\n   public name: string = '';\n   public value: string = '';\n\n   // 위치 속성\n   public width!: string;\n   public height!: string;\n   public x!: number;\n   public y!: number;\n \n   // 레이아웃 col & box(col 수만큼 있다.)\n   public colSpan!: number;\n   public path!: string;\n   public boxs: IValue[] = []; // 어떠한 경우에도 'row'의 boxs 배열 가져옴!!!!\n   public boxComponents: ComponentRef<BoxComponent>[] = [];\n\n   public routerRowId!: string;\n   private routerBoxId!: string;\n   private component!: ComponentRef<BoxComponent>;\n\n   public sketchflowLayoutConst = new SketchflowLayoutActionConst();\n   public sketchflowLayoutComponentConst = new SketchflowLayoutComponentConst();\n\n   public initialBoxItem: IValue = {\n    id: this.logicService.getGUID(),\n    type: 'box',\n    name: '',\n    value: '',\n    size: {\n      width: '*',\n      height: ''\n    },\n    position: {\n      x: 0,\n      y: 0\n    },\n    cell: {\n      colSpan: 0\n    },\n    path: '',\n    boxs: []\n   }\n \n   public override dataInit(): void {\n    this.id = this.data.id;\n    this.type = this.data.type;\n    this.name = this.data.name;\n    this.value = this.data.value;\n\n    this.width = this.data.size.width;\n    this.height = this.data.size.height;\n    this.x = this.data.position.x;\n    this.y = this.data.position.y;\n\n    this.colSpan = this.data.cell.colSpan;\n    this.path = this.data.path;\n    this.boxs = [...this.data.boxs];\n\n    this.initialBoxItem.size.height = this.height;\n  }\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(params => {\n      this.routerRowId = params['rowId'];\n      this.routerBoxId = params['boxId'];\n    });\n  }\n\n  public onColSpanChange(event: number) {\n    const currentCount = this.boxs.length;\n    const rowInstance = this.logicSketchflowService.rows.find(row => row.instance.id === this.id)?.instance;\n    if (!rowInstance) return;\n\n    if (event <= 0) {\n      this.boxs.forEach((box, index) => {\n        rowInstance.container.remove(index);\n      })\n      this.boxs = [];\n      this.boxComponents = [];\n      this.logicSketchflowService.setProp(this.logicSketchflowService.currentPage, 'boxs', this.id, this.boxs);\n      return;\n    }\n\n    if (event < currentCount) {\n      this.boxs.slice(event).forEach((box, index) => {\n        rowInstance.container.remove(event + index);\n      });\n      this.boxs = this.boxs.slice(0, event);\n      this.boxs.forEach(box => {\n        box.size.width = this.layoutService.convertStarWidth(this.layoutService.calculateWidth(this.width, this.x), event);\n      });\n      this.boxComponents = this.boxComponents.slice(0, event);\n      this.boxComponents.forEach(boxComponent => boxComponent.instance.data = { size: { width: this.layoutService.convertStarWidth(this.layoutService.calculateWidth(this.width, this.x), event) } });\n    }\n    else {\n      for (let i = currentCount; i < event; i++) {\n        let newBox = JSON.parse(JSON.stringify(this.initialBoxItem)); // 객체를 깊은 복사하여 각 항목을 독립적으로 관리!!\n        newBox.id = this.logicService.getGUID();\n        newBox.size.height = this.layoutService.calculateHeight(this.height, this.y);\n        newBox.size.width = this.layoutService.convertStarWidth(this.layoutService.calculateWidth(this.width, this.x), event);\n\n        let component = this.factoryService.createComponent(BoxComponent, rowInstance.container, newBox);\n        component.instance.parentId = this.id;\n        this.boxs.push(component.instance.data);\n        this.boxComponents.push(component);\n\n\n        this.boxs.forEach((box: Partial<IValue>) => box = { size: { width: newBox.size.width, height: newBox.size.height } });\n        this.boxComponents.forEach(boxComponent => boxComponent.instance.data = { size: { width: newBox.size.width } } );\n      }\n    }\n\n    //console.log('onColSpanChange boxs!!', this.boxs);\n    this.logicSketchflowService.setProp(this.logicSketchflowService.currentPage, 'boxs', this.id, this.boxs);\n    this.logicSketchflowService.onChangeRowData(this.id, 'colSpan', event);\n  }\n\n}\n", "@if (type === 'row') {\n  <div class=\"mg-10\" [id]=\"id\">\n    <div class=\"mg-10\">{{ name }}</div>\n    <div class=\"mg-10\">\n      <h2>Row Size</h2>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Row width</mat-label>\n        <input matInput [ngModel]=\"width\" (ngModelChange)=\"logicSketchflowService.onChangeRowData(id, 'width', $event)\">\n      </mat-form-field>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Row Height</mat-label>\n        <input matInput [ngModel]=\"height\" (ngModelChange)=\"logicSketchflowService.onChangeRowData(id, 'height', $event)\">\n      </mat-form-field>\n      <h2>Row Position</h2>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>X</mat-label>\n        <input matInput type=\"number\" [ngModel]=\"x\" (ngModelChange)=\"logicSketchflowService.onChangeRowData(id, 'x', $event)\">\n      </mat-form-field>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Y</mat-label>\n        <input matInput type=\"number\" [ngModel]=\"y\" (ngModelChange)=\"logicSketchflowService.onChangeRowData(id, 'y', $event)\">\n      </mat-form-field>\n    </div>\n    \n\n    <div class=\"mg-10\">\n      <h2>Col Span</h2>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Col Span</mat-label>\n        <input matInput type=\"number\" [ngModel]=\"colSpan\" (ngModelChange)=\"onColSpanChange($event)\">\n      </mat-form-field>\n    </div>\n  </div>\n}\n\n@if (type === 'box') {\n  <div class=\"mg-10\" [id]=\"id\">\n    <div class=\"mg-10\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Layout</mat-label>\n        <mat-select [(ngModel)]=\"name\" (selectionChange)=\"logicSketchflowService.onChangeBoxData(routerRowId, id, 'name', $event.value)\">\n          @for (layout of sketchflowLayoutConst.actions; track layout) {\n            <mat-option [value]=\"layout.key\">{{ layout.value.name }}</mat-option>\n          }\n        </mat-select>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Component</mat-label>\n        <mat-select [(ngModel)]=\"name\" (selectionChange)=\"logicSketchflowService.onChangeBoxData(routerRowId, id, 'name', $event.value)\">\n          @for (component of sketchflowLayoutComponentConst.components; track component) {\n            <mat-option [value]=\"component.key\">{{ component.value.name }}</mat-option>\n          }\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div class=\"mg-10\">\n      @if (name === 'text') {\n        <h2>Value</h2>\n        <mat-form-field appearance=\"outline\">\n          <mat-label>Box Value</mat-label>\n          <input matInput name=\"value\" [ngModel]=\"value\" (ngModelChange)=\"logicSketchflowService.onChangeBoxData(routerRowId, id, 'value', $event)\">\n        </mat-form-field>\n      }\n      <h2>Box Size</h2>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Row width</mat-label>\n        <input matInput name=\"width\" [ngModel]=\"width\" (ngModelChange)=\"logicSketchflowService.onChangeBoxData(routerRowId, id, 'width', $event)\">\n      </mat-form-field>\n      <h2>Box Position</h2>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>X</mat-label>\n        <input matInput name=\"x\" type=\"number\" [ngModel]=\"x\" (ngModelChange)=\"logicSketchflowService.onChangeBoxData(routerRowId, id, 'x', $event)\">\n      </mat-form-field>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Y</mat-label>\n        <input matInput name=\"y\" type=\"number\" [ngModel]=\"y\" (ngModelChange)=\"logicSketchflowService.onChangeBoxData(routerRowId, id, 'y', $event)\">\n      </mat-form-field>\n      @if (name === 'page') {\n        <h2>Path</h2>\n        <mat-form-field appearance=\"outline\">\n          <mat-label>Path</mat-label>\n          <input matInput name=\"path\" [ngModel]=\"path\" (ngModelChange)=\"logicSketchflowService.onChangeBoxData(routerRowId, id, 'path', $event)\">\n        </mat-form-field>\n      }\n    </div>\n  </div>\n}", "import { Component, ComponentRef, OnDestroy, OnInit, inject } from '@angular/core';\nimport { DataAbstract } from '../../../../core/classes/data.abstract';\nimport { IValue } from '../../classes/data/sketchflow.data';\nimport { RowInputComponent } from '../row-input/row-input.component';\nimport { BoxComponent } from '../box/box.component';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-row',\n  templateUrl: './row.component.html',\n  styleUrl: './row.component.scss'\n})\nexport class RowComponent extends DataAbstract implements OnInit, OnDestroy {\n\n  private readonly router = inject(Router);\n  private readonly route = inject(ActivatedRoute);\n\n   // 컴포넌트 이름\n   public id: string = '';\n   public type = 'row';\n   public name: string = '';\n   public value: string = '';\n\n   // 위치 속성\n   public width!: string;\n   public height!: string;\n   public x!: number;\n   public y!: number;\n \n   // 레이아웃 col\n   public colSpan!: number;\n   public boxs: IValue[] = [];\n\n   public boxComponents: ComponentRef<BoxComponent>[] = [];\n\n   public isSelected: boolean = false;\n   private component!: ComponentRef<BoxComponent>;\n   \n   public override dataInit(): void {\n     if (this.data.id) this.id = this.data.id;\n     if (this.data.type) this.type = this.data.type;\n     if (this.data.name) this.name = this.data.name;\n     if (this.data.value) this.value = this.data.value;\n \n     if (this.data?.size?.width) this.width = this.data.size.width;\n     if (this.data?.size?.height)this.height = this.data.size.height;\n     if (this.data?.position?.x) this.x = this.data.position.x;\n     if (this.data?.position?.y) this.y = this.data.position.y;\n     if (this.data?.boxs) this.boxs = [...this.data.boxs];\n \n     if (this.data?.cell?.colSpan) this.colSpan = this.data.cell.colSpan;\n   }\n \n   ngOnInit(): void {\n    console.log('row component OnInit');\n     this.route.queryParams.subscribe(params => {\n      const selectedId = params['rowId'];\n      const boxId = params['boxId'];\n      if (boxId) {\n        this.isSelected = false;\n        return;\n      }\n      this.isSelected = false;\n      if (this.id === selectedId) this.isSelected = true;\n     });\n\n     // 여기서부터는 box 컴포넌트를 그릴거야.\n     const rowInstance = this.logicSketchflowService.rows.find(row => row.instance.id === this.id)?.instance;\n     if (!rowInstance) return;\n    \n     if (this.boxs.isEmpty()) return;\n     this.boxComponents = [];\n\n     this.boxs.forEach((box: IValue, index: number) => {\n      box.size.width = this.layoutService.convertStarWidth(this.layoutService.calculateWidth(this.width, this.x), this.colSpan);\n      this.component = this.factoryService.createComponent(BoxComponent, rowInstance.container, box);\n      this.component.instance.parentId = this.id;\n      this.boxComponents.push(this.component);\n     });\n   }\n\n   public onClickDetail() {\n    console.log('click row');\n    this.logicSketchflowService.sketchflowDrawerPosition = 'end';\n    this.logicSketchflowService.sketchflowDrawer.toggle();\n    this.router.navigate([`/sketchflow/${this.logicSketchflowService.currentPage}`], {\n      queryParams: {\n        rowId: this.id\n      }\n    });\n \n    const rowData: IValue = {\n      id: this.id,\n      type: this.type as 'row',\n      name: this.name,\n      value: this.value,\n      size: {\n        width: this.width,\n        height: this.height\n      },\n      position: {\n         x: this.x,\n         y: this.y,\n      },\n      cell: {\n         colSpan: this.colSpan\n      },\n      path: '',\n      boxs: this.boxs\n    }\n\n    if (this.logicSketchflowService.rowInputComponent == null) {\n      this.logicSketchflowService.rowDetailContainer.clear();\n      this.logicSketchflowService.rowInputComponent = this.factoryService.createComponent(\n        RowInputComponent,\n        this.logicSketchflowService.rowDetailContainer,\n        rowData\n      );\n    }\n\n    this.logicSketchflowService.rowInputComponent.instance.data = rowData;\n   }\n\n   ngOnDestroy(): void {\n    console.log('row component OnDestroy');\n    \n    // DB에서 삭제시켜야함\n    const index = this.logicSketchflowService.rows.findIndex(ref => ref.instance.id === this.id);\n    if (index !== -1) {\n      this.logicSketchflowService.rows.splice(index, 1);\n    }\n  }\n\n}\n", "<div \n  [id]=\"id\"\n  class=\"outer-box\"\n  [style.width]=\"width\"\n  [style.height]=\"height\"\n  [style.padding-left.px]=\"x\"\n  [style.padding-top.px]=\"y\"\n  (click)=\"onClickDetail()\"\n>\n  <div class=\"flex-row inner-box\" [ngClass]=\"{ 'selected': isSelected, 'base' : !isSelected }\">\n    <ng-container #container></ng-container>\n  </div>\n</div>", "import { Component, OnInit } from '@angular/core';\nimport { DataAbstract } from '../../../../core/classes/data.abstract';\n\n@Component({\n  selector: 'app-row-detail',\n  templateUrl: './row-detail.component.html',\n  styleUrl: './row-detail.component.scss'\n})\nexport class RowDetailComponent extends DataAbstract implements OnInit {\n\n  ngOnInit(): void {\n    this.logicSketchflowService.rowDetailContainer = this.container;\n  }\n\n  public onClickClose() {    \n    this.logicSketchflowService.sketchflowDrawer.close();\n  }\n\n}\n", "<div style=\"display: flex; justify-content: flex-end;\">\n  <button mat-icon-button (click)=\"onClickClose()\">\n    <mat-icon>close</mat-icon>\n  </button>\n</div>\n<ng-container #container></ng-container>", "import { Component, OnDestroy, OnInit, ViewChild, inject } from '@angular/core';\nimport { DataAbstract } from '../../core/classes/data.abstract';\nimport { IValue } from './classes/data/sketchflow.data';\nimport { MatDrawer } from '@angular/material/sidenav';\nimport { RowComponent } from './components/row/row.component';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-sketchflow',\n  templateUrl: './sketchflow.component.html',\n  styleUrl: './sketchflow.component.scss'\n})\nexport class SketchflowComponent extends DataAbstract implements OnInit, OnDestroy {\n\n  @ViewChild('sketchflowDrawer', { static: true }) public sketchflowDrawer!: MatDrawer;\n\n  private readonly route = inject(ActivatedRoute);\n\n  ngOnInit() {\n    console.log('sketchflow!!!!!!');\n    this.route.params.subscribe(params => {\n      this.logicSketchflowService.currentPage = params['pageName'];\n\n      this.logicSketchflowService.sketchflowDrawer = this.sketchflowDrawer;\n  \n      this.container.clear();\n      this.logicSketchflowService.getValue(this.logicSketchflowService.currentPage).forEach((component: IValue) => {\n        this.logicSketchflowService.rows.push(this.factoryService.createComponent(\n          RowComponent,\n          this.container,\n          component\n        ));\n      });\n    });\n\n    this.logicSketchflowService.rowData.subscribe(d => {\n      if (d.prop === '') return;\n\n      let rowInstance = this.logicSketchflowService.rows.find(row => row.instance.id === d.id)?.instance;\n      if (!rowInstance) return;\n\n      switch (d.prop) {\n        case 'width':\n          rowInstance.data = {\n            size: {\n              width : d.data\n            }\n          };\n          this.logicSketchflowService.setProp(this.logicSketchflowService.currentPage, 'width', d.id, d.data);\n          break;\n        case 'height':\n          rowInstance.data = {\n            size: {\n              height : d.data\n            }\n          };\n          this.logicSketchflowService.setProp(this.logicSketchflowService.currentPage, 'height', d.id, d.data);\n          break;\n        case 'x':\n          rowInstance.data = {\n            position: {\n              x : d.data\n            }\n          };\n          this.logicSketchflowService.setProp(this.logicSketchflowService.currentPage, 'x', d.id, d.data);\n          break;\n        case 'y':\n          rowInstance.data = {\n            position: {\n              y : d.data\n            }\n          };\n          this.logicSketchflowService.setProp(this.logicSketchflowService.currentPage, 'y', d.id, d.data);\n          break;\n        case 'colSpan':\n          rowInstance.data = {\n            cell: {\n              colSpan : d.data\n            }\n          };\n          this.logicSketchflowService.setProp(this.logicSketchflowService.currentPage, 'colSpan', d.id, d.data);\n          break;\n      } \n    });\n\n    this.logicSketchflowService.boxData.subscribe(d => {\n      // console.log('sketchflow boxData', d);\n      // 각 box 컴포넌트의 데이터를 변경하면 됨\n      let rowInstance = this.logicSketchflowService.rows.find(row => row.instance.id === d.rowId)?.instance;\n      //console.log('sketchflow rowInstance', rowInstance);\n      if (!rowInstance) return;\n\n      let boxComponentInstance = rowInstance.boxComponents.find(boxComponent => boxComponent.instance.id === d.id)?.instance;\n      //console.log('sketchflow boxComponentInstance', boxComponentInstance);\n      if(!boxComponentInstance) return;\n\n      const currentBoxIndex: number = rowInstance.boxComponents.findIndex(boxComponent => boxComponent.instance.id === d.id);\n\n      const updateBox = JSON.parse(JSON.stringify(rowInstance.boxs.find(box => box.id === d.id)))\n\n      //console.log('sketchflow currentBoxIndex', currentBoxIndex);\n      switch(d.prop) {\n        case 'name':\n          boxComponentInstance.data = { name: d.data };\n          updateBox[d.prop] = d.data;\n          break;\n        case 'value':\n          boxComponentInstance.data = { value: d.data };\n          updateBox[d.prop] = d.data;\n          break;\n        case 'width':\n          boxComponentInstance.data = { size: { width: d.data } };\n          updateBox.size.width = d.data;\n          break;\n        case 'x':\n          boxComponentInstance.data = { position: { x: d.data } };\n          updateBox.position.x = d.data;\n          break;\n        case 'y':\n          boxComponentInstance.data = { position: { y: d.data } };\n          updateBox.position.y = d.data;\n          break;\n        case 'path':\n          boxComponentInstance.data = { path: d.data };\n          updateBox[d.prop] = d.data;\n          break;\n      }\n      \n      if (currentBoxIndex !== -1) {\n        rowInstance.boxs = [\n          ...rowInstance.boxs.slice(0, currentBoxIndex),\n          updateBox,\n          ...rowInstance.boxs.slice(currentBoxIndex + 1)\n        ];\n      }\n\n      //console.log(' rowInstance.boxs^^',  rowInstance.boxs);\n      this.logicSketchflowService.setProp(this.logicSketchflowService.currentPage, 'boxs', d.rowId, rowInstance.boxs);\n    });\n  }\n\n  ngOnDestroy() {\n    console.log('sketchflow ondestroy');\n  }\n\n}\n", "<mat-drawer-container hasBackdrop=\"false\" [style.height]=\"layoutService.getBodyHeight()\">\n  <mat-drawer #sketchflowDrawer mode=\"over\" [position]=\"logicSketchflowService.sketchflowDrawerPosition\" [style.width.px]=\"300\">\n    <app-row-detail></app-row-detail>\n  </mat-drawer>\n  <mat-drawer-content>\n    <div class=\"sketchflow-background-layer\" [style.height]=\"layoutService.getBodyHeight()\"></div>\n    <div class=\"sketchflow-row\" [style.height]=\"layoutService.getBodyHeight()\">\n      <ng-container #container></ng-container>\n    </div>\n  </mat-drawer-content>\n</mat-drawer-container>", "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SketchflowComponent } from './sketchflow.component';\n\nexport const routes: Routes = [\n  {\n    path: ':pageName',\n    component: SketchflowComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SketchflowRoutingModule { }\n", "import { NgModule } from '@angular/core';\nimport { SketchflowComponent } from './sketchflow.component';\nimport { SharedModule } from '../../shared/shared.module';\nimport { BoxComponent } from './components/box/box.component';\nimport { SketchflowRoutingModule } from './sketchflow-routing.module';\nimport { RowComponent } from './components/row/row.component';\nimport { RowDetailComponent } from './components/row-detail/row-detail.component';\nimport { RowInputComponent } from './components/row-input/row-input.component';\n\n\n\n@NgModule({\n  declarations: [\n    SketchflowComponent,\n    BoxComponent,\n    RowComponent,\n    RowDetailComponent,\n    RowInputComponent\n  ],\n  imports: [\n    SharedModule,\n    SketchflowRoutingModule,\n  ],\n})\nexport class SketchflowModule { }\n"],
  "mappings": "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",
  "names": ["_c0"]
}
